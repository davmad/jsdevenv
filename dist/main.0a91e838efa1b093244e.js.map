{"version":3,"sources":["webpack:///main.0a91e838efa1b093244e.js","webpack:///./src/index.js","webpack:///./src/api/userApi.js","webpack:///./src/api/baseUrl.js","webpack:///./~/numeral/numeral.js","webpack:///./src/zmanim.js"],"names":["webpackJsonp","module","exports","__webpack_require__","global","_interopRequireDefault","obj","__esModule","default","_userApi","_numeral","_numeral2","_zmanim","curHebDate","getHebDate","courseValue","format","console","log","getUsers","then","result","usersBody","forEach","user","id","firstName","lastName","email","document","getElementById","innerHTML","deleteLinks","getElementsByClassName","Array","from","link","onclick","event","element","target","preventDefault","deleteUser","attributes","value","row","parentNode","removeChild","call","this","get","del","url","fetch","baseUrl","onSuccess","onError","request","Request","method","response","json","error","Object","defineProperty","_baseUrl","_baseUrl2","getBaseUrl","getQueryStringParameterByName","name","window","location","href","replace","regex","RegExp","results","exec","decodeURIComponent","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","Numeral","number","_value","toFixed","precision","roundingFunction","optionals","optionalsRegExp","output","power","Math","pow","formatNumeral","n","indexOf","formatCurrency","formatPercentage","formatTime","formatNumber","unformatNumeral","string","thousandRegExp","millionRegExp","billionRegExp","trillionRegExp","stringOriginal","suffixes","bytesMultiplier","unformatTime","zeroFormat","languages","currentLanguage","delimiters","decimal","abbreviations","thousand","currency","symbol","million","billion","trillion","length","match","split","min","Number","ceil","spliceIndex","symbolIndex","openParenIndex","minusSignIndex","space","splice","join","hours","floor","minutes","seconds","round","timeArray","max","w","thousands","negP","signed","optDec","abbr","abbrK","abbrM","abbrB","abbrT","abbrForce","bytes","ord","abs","d","neg","slice","ordinal","toString","loadLanguage","key","values","multiplier","x","parts","correctionFactor","args","prototype","arguments","reduce","prev","next","mp","mn","Infinity","numeral","VERSION","defaultFormat","hasModule","input","isNumeral","fn","unformat","version","language","Error","languageData","b","callback","opt_initialValue","TypeError","index","isValueSet","hasOwnProperty","clone","inputString","undefined","valueOf","set","add","cback","accum","curr","currI","O","corrFactor","subtract","multiply","divide","difference","ender","apply","getHebABC","charNum","curChar","setLastChar","lastChar","Gauss","year","a","c","m","Mar","leap","y","civMonthLength","month","civ2heb","day","hy","pesach","anchor","adarType","days","Easter","Y","C","N","K","I","J","L","M","D","ret","DOW","NthDOW","nth","weekday","doCal","calendar","BuildLuachHTML","selM","selY","firstOfMonth","Date","startPos","getDay","retVal","parms","hebColor","civColor","hebDate","hebDay","now","tday","getDate","tmonth","getMonth","tyear","getYear","cMonth","cYear","monthName","multiLang","currLang","civMonth","lastDate","hm","hMonth","hYear","hmS","hmE","substring","eval","start","hebMonth","hHebYear","end","hebSpan","col","openCol","closeCol","dayNum","weekDay","cell","cDay","moed","jewishHolidays","moadim","holiday","civilHolidays","holidays","bg","hHebDay","en_hHebYear","he_hHebYear","curNum","hebYr","curDiv","en_holidays","cday","cmonth","cyear","e","en_moadim","hday","hmonth","dow","hd","hdate","he_holidays","he_moadim","en","he"],"mappings":"AAAAA,cAAc,IAER,SAASC,EAAQC,EAASC,IAEH,SAASC,GAAS,YAY9C,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GChBxFH,EAAA,EAEA,IAAAM,GAAAN,EAAA,GAEAO,EAAAP,EAAA,GDQKQ,EAAYN,EAAuBK,GCNxCE,EAAAT,EAAA,GAEMU,GAAa,EAAAD,EAAAE,YAAW,GAAI,EAAG,MAE/BC,GAAc,EAAAJ,cAAQ,KAAMK,OAAO,UACzCC,SAAQC,IAAR,eAA2BH,EAA3B,6BAEAE,QAAQC,IAAR,yBAAqCL,EAArC,OAIA,EAAAJ,EAAAU,YAAWC,KAAK,SAAAC,GACZ,GAAIC,GAAY,EAEhBD,GAAOE,QAAQ,SAAAC,GACXF,qCACmBE,EAAKC,GADxB,6CAEFD,EAAKC,GAFH,cAGFD,EAAKE,UAHH,cAIFF,EAAKG,SAJH,cAKFH,EAAKI,MALH,iBASJxB,EAAOyB,SAASC,eAAe,SAASC,UAAYT,CAEpD,IAAMU,GAAc5B,EAAOyB,SAASI,uBAAuB,aAE3DC,OAAMC,KAAKH,EAAa,SAAAI,GACpBA,EAAKC,QAAU,SAAUC,GACrB,GAAMC,GAAUD,EAAME,MACtBF,GAAMG,kBACN,EAAAhC,EAAAiC,YAAWH,EAAQI,WAAW,WAAWC,MACzC,IAAMC,GAAMN,EAAQO,WAAWA,UAC/BD,GAAIC,WAAWC,YAAYF,UDQTG,KAAK9C,EAAU,WAAa,MAAO+C,WAI3D,SAAShD,EAAQC,KAKhB,CAED,SAASD,EAAQC,EAASC,GAE/B,YAcA,SAASE,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GEtEjF,QAASa,KACZ,MAAO+B,GAAI,SAGR,QAASR,GAAWjB,GACvB,MAAO0B,YAAa1B,GAGxB,QAASyB,GAAIE,GACT,MAAOC,OAAMC,EAAUF,GAAKhC,KAAKmC,EAAWC,GAIhD,QAASL,GAAIC,GACT,GAAMK,GAAU,GAAIC,SAAQJ,EAAUF,GAClCO,OAAQ,UAGZ,OAAON,OAAMI,GAASrC,KAAKmC,EAAWC,GAG1C,QAASD,GAAWK,GAChB,MAAOA,GAASC,OAGpB,QAASL,GAASM,GACd7C,QAAQC,IAAI4C,GFgCfC,OAAOC,eAAe9D,EAAS,cAC3B0C,OAAO,IAEX1C,EE7DeiB,WF8DfjB,EE1DewC,aAThBvC,EAAA,EACA,IAAA8D,GAAA9D,EAAA,GFwEK+D,EAAY7D,EAAuB4D,GEtElCX,GAAU,EAAAY,iBF0GT,CAED,SAASjE,EAAQC,GAEtB,YGjHc,SAASiE,KACtB,MAAOC,GAA8B,cAAgB,yBAA2B,IAKlF,QAASA,GAA8BC,EAAMjB,GACtCA,IACHA,EAAMkB,OAAOC,SAASC,MAExBH,EAAOA,EAAKI,QAAQ,UAAW,OAC/B,IAAIC,GAAQ,GAAIC,QAAO,OAASN,EAAO,qBAC/BO,EAAUF,EAAMG,KAAKzB,EAC7B,OAAKwB,GAGAA,EAAQ,GAGNE,mBAAmBF,EAAQ,GAAGH,QAAQ,MAAO,MAF3C,GAHA,KHqGVV,OAAOC,eAAe9D,EAAS,cAC7B0C,OAAO,IAET1C,aGtHuBiE,GH6IlB,SAASlE,EAAQC,EAASC,GI7IhC,GAAA4E,GAAAC;;;;;;;CAQA,WAuBA,QAAAC,GAAAC,GACAjC,KAAAkC,OAAAD,EASA,QAAAE,GAAAxC,EAAAyC,EAAAC,EAAAC,GACA,GACAC,GACAC,EAFAC,EAAAC,KAAAC,IAAA,GAAAP,EAaA,OAPAI,IAAAH,EAAA1C,EAAA8C,MAAAN,QAAAC,GAEAE,IACAC,EAAA,GAAAb,QAAA,OAA4CY,EAAA,MAC5CE,IAAAhB,QAAAe,EAAA,KAGAC,EAQA,QAAAI,GAAAC,EAAA9E,EAAAsE,GACA,GAAAG,EAcA,OAVAA,GADAzE,EAAA+E,QAAA,QACAC,EAAAF,EAAA9E,EAAAsE,GACStE,EAAA+E,QAAA,QACTE,EAAAH,EAAA9E,EAAAsE,GACStE,EAAA+E,QAAA,QACTG,EAAAJ,EAAA9E,GAEAmF,EAAAL,EAAAX,OAAAnE,EAAAsE,GAQA,QAAAc,GAAAN,EAAAO,GACA,GACAC,GACAC,EACAC,EACAC,EAGAf,EAPAgB,EAAAL,EAKAM,GAAA,yCACAC,GAAA,CAGA,IAAAP,EAAAN,QAAA,QACAD,EAAAX,OAAA0B,EAAAR,OAEA,IAAAA,IAAAS,EACAhB,EAAAX,OAAA,MACa,CAYb,IAXA,MAAA4B,EAAAC,GAAAC,WAAAC,UACAb,IAAA5B,QAAA,UAAAA,QAAAsC,EAAAC,GAAAC,WAAAC,QAAA,MAIAZ,EAAA,GAAA3B,QAAA,YAAAoC,EAAAC,GAAAG,cAAAC,SAAA,aAAAL,EAAAC,GAAAK,SAAAC,OAAA,iBACAf,EAAA,GAAA5B,QAAA,YAAAoC,EAAAC,GAAAG,cAAAI,QAAA,aAAAR,EAAAC,GAAAK,SAAAC,OAAA,iBACAd,EAAA,GAAA7B,QAAA,YAAAoC,EAAAC,GAAAG,cAAAK,QAAA,aAAAT,EAAAC,GAAAK,SAAAC,OAAA,iBACAb,EAAA,GAAA9B,QAAA,YAAAoC,EAAAC,GAAAG,cAAAM,SAAA,aAAAV,EAAAC,GAAAK,SAAAC,OAAA,iBAGA5B,EAAA,EAA+BA,GAAAiB,EAAAe,UAC/Bd,EAAAP,EAAAN,QAAAY,EAAAjB,QAAAC,KAAAC,IAAA,KAAAF,EAAA,IADyDA,KASzDI,EAAAX,QAAA,EAAAyB,EAAA,IAAAF,EAAAiB,MAAArB,GAAAX,KAAAC,IAAA,UAAAc,EAAAiB,MAAApB,GAAAZ,KAAAC,IAAA,UAAAc,EAAAiB,MAAAnB,GAAAb,KAAAC,IAAA,UAAAc,EAAAiB,MAAAlB,GAAAd,KAAAC,IAAA,WAAAS,EAAAN,QAAA,iBAAAM,EAAAuB,MAAA,KAAAF,OAAA/B,KAAAkC,IAAAxB,EAAAuB,MAAA,KAAAF,OAAA,EAAArB,EAAAuB,MAAA,KAAAF,OAAA,YAAAI,OAAAzB,EAAA5B,QAAA,kBAGAqB,EAAAX,OAAA,EAAAQ,KAAAoC,KAAAjC,EAAAX,QAAAW,EAAAX,OAGA,MAAAW,GAAAX,OAGA,QAAAa,GAAAF,EAAA9E,EAAAsE,GACA,GAIA0C,GACAvC,EALAwC,EAAAjH,EAAA+E,QAAA,KACAmC,EAAAlH,EAAA+E,QAAA,KACAoC,EAAAnH,EAAA+E,QAAA,KACAqC,EAAA,EA0CA,OArCApH,GAAA+E,QAAA,UACAqC,EAAA,IACApH,IAAAyD,QAAA,UACSzD,EAAA+E,QAAA,UACTqC,EAAA,IACApH,IAAAyD,QAAA,UAEAzD,IAAAyD,QAAA,QAIAgB,EAAAU,EAAAL,EAAAX,OAAAnE,EAAAsE,GAGA2C,GAAA,EACAxC,EAAAM,QAAA,SAAAN,EAAAM,QAAA,SACAN,IAAAmC,MAAA,IACAI,EAAA,GACAC,EAAAC,GAAAD,EAAAE,KAEAH,EAAA,GAEAvC,EAAA4C,OAAAL,EAAA,EAAAjB,EAAAC,GAAAK,SAAAC,OAAAc,GACA3C,IAAA6C,KAAA,KAEA7C,EAAAsB,EAAAC,GAAAK,SAAAC,OAAAc,EAAA3C,EAGAA,EAAAM,QAAA,SACAN,IAAAmC,MAAA,IACAnC,EAAA4C,UAAA,EAAAD,EAAArB,EAAAC,GAAAK,SAAAC,QACA7B,IAAA6C,KAAA,KAEA7C,IAAA2C,EAAArB,EAAAC,GAAAK,SAAAC,OAIA7B,EAGA,QAAAQ,GAAAH,EAAA9E,EAAAsE,GACA,GACAG,GADA2C,EAAA,GAEAxF,EAAA,IAAAkD,EAAAX,MAoBA,OAjBAnE,GAAA+E,QAAA,UACAqC,EAAA,IACApH,IAAAyD,QAAA,UAEAzD,IAAAyD,QAAA,QAGAgB,EAAAU,EAAAvD,EAAA5B,EAAAsE,GAEAG,EAAAM,QAAA,SACAN,IAAAmC,MAAA,IACAnC,EAAA4C,UAAA,EAAAD,EAAA,KACA3C,IAAA6C,KAAA,KAEA7C,IAAA2C,EAAA,IAGA3C,EAGA,QAAAS,GAAAJ,GACA,GAAAyC,GAAA5C,KAAA6C,MAAA1C,EAAAX,OAAA,OACAsD,EAAA9C,KAAA6C,OAAA1C,EAAAX,OAAA,GAAAoD,EAAA,QACAG,EAAA/C,KAAAgD,MAAA7C,EAAAX,OAAA,GAAAoD,EAAA,MAAAE,EACA,OAAAF,GAAA,KAAAE,EAAA,OAAAA,KAAA,KAAAC,EAAA,OAAAA,KAGA,QAAA7B,GAAAR,GACA,GAAAuC,GAAAvC,EAAAuB,MAAA,KACAc,EAAA,CAeA,OAbA,KAAAE,EAAAlB,QAEAgB,GAAA,GAAAZ,OAAAc,EAAA,OAEAF,GAAA,GAAAZ,OAAAc,EAAA,IAEAF,GAAAZ,OAAAc,EAAA,KACS,IAAAA,EAAAlB,SAETgB,GAAA,GAAAZ,OAAAc,EAAA,IAEAF,GAAAZ,OAAAc,EAAA,KAEAd,OAAAY,GAGA,QAAAvC,GAAAvD,EAAA5B,EAAAsE,GACA,GAaAuC,GACAgB,EACAnD,EACAoD,EACAzD,EACA0D,EAlBAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,EAAA,GACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,EAAA,GACAC,EAAA,GACAC,EAAAhE,KAAAgE,IAAA/G,GACA+D,GAAA,6CAOAiD,EAAA,GACAC,GAAA,CAGA,QAAAjH,GAAA,OAAAkE,EACA,MAAAA,EAiDA,IA7CA9F,EAAA+E,QAAA,SACAiD,GAAA,EACAhI,IAAA8I,MAAA,OACa9I,EAAA+E,QAAA,UACbkD,GAAA,EACAjI,IAAAyD,QAAA,WAIAzD,EAAA+E,QAAA,UAEAqD,EAAApI,EAAA+E,QAAA,SACAsD,EAAArI,EAAA+E,QAAA,SACAuD,EAAAtI,EAAA+E,QAAA,SACAwD,EAAAvI,EAAA+E,QAAA,SACAyD,EAAAJ,GAAAC,GAAAC,GAAAC,EAGAvI,EAAA+E,QAAA,UACAoD,EAAA,IACAnI,IAAAyD,QAAA,UAEAzD,IAAAyD,QAAA,QAGAkF,GAAAhE,KAAAC,IAAA,SAAA4D,GAAAD,GAEAJ,GAAApC,EAAAC,GAAAG,cAAAM,SACA7E,GAAA+C,KAAAC,IAAA,QACiB+D,EAAAhE,KAAAC,IAAA,QAAA+D,GAAAhE,KAAAC,IAAA,QAAA4D,GAAAF,GAEjBH,GAAApC,EAAAC,GAAAG,cAAAK,QACA5E,GAAA+C,KAAAC,IAAA,OACiB+D,EAAAhE,KAAAC,IAAA,OAAA+D,GAAAhE,KAAAC,IAAA,QAAA4D,GAAAH,GAEjBF,GAAApC,EAAAC,GAAAG,cAAAI,QACA3E,GAAA+C,KAAAC,IAAA,QACiB+D,EAAAhE,KAAAC,IAAA,OAAA+D,GAAAhE,KAAAC,IAAA,QAAA4D,GAAAJ,KAEjBD,GAAApC,EAAAC,GAAAG,cAAAC,SACAxE,GAAA+C,KAAAC,IAAA,QAKA5E,EAAA+E,QAAA,QASA,IAPA/E,EAAA+E,QAAA,UACA0D,EAAA,IACAzI,IAAAyD,QAAA,UAEAzD,IAAAyD,QAAA,QAGAiB,EAAA,EAA+BA,GAAAiB,EAAAe,OAA0BhC,IAIzD,GAHAmC,EAAAlC,KAAAC,IAAA,KAAAF,GACAmD,EAAAlD,KAAAC,IAAA,KAAAF,EAAA,GAEA9C,GAAAiF,GAAAjF,EAAAiG,EAAA,CACAY,GAAA9C,EAAAjB,GACAmC,EAAA,IACAjF,GAAAiF,EAEA,OAiEA,MA3DA7G,GAAA+E,QAAA,UAEA/E,EAAA+E,QAAA,UACA2D,EAAA,IACA1I,IAAAyD,QAAA,UAEAzD,IAAAyD,QAAA,QAGAiF,GAAA3C,EAAAC,GAAA+C,QAAAnH,IAGA5B,EAAA+E,QAAA,YACAmD,GAAA,EACAlI,IAAAyD,QAAA,YAGAqE,EAAAlG,EAAAoH,WAAApC,MAAA,QACAvC,EAAArE,EAAA4G,MAAA,QACAmB,EAAA/H,EAAA+E,QAAA,KAEAV,GACAA,EAAAU,QAAA,SACAV,IAAAZ,QAAA,QACAY,IAAAuC,MAAA,KACAgC,EAAAxE,EAAAxC,EAAAyC,EAAA,GAAAqC,OAAArC,EAAA,GAAAqC,OAAApC,EAAAD,EAAA,GAAAqC,SAEAkC,EAAAxE,EAAAxC,EAAAyC,EAAAqC,OAAApC,GAGAwD,EAAAc,EAAAhC,MAAA,QAGAgC,EADAA,EAAAhC,MAAA,QAAAF,OACAX,EAAAC,GAAAC,WAAAC,QAAA0C,EAAAhC,MAAA,QAEA,GAGAsB,GAAA,IAAApB,OAAA8B,EAAAE,MAAA,MACAF,EAAA,KAGAd,EAAA1D,EAAAxC,EAAA,KAAA0C,GAIAwD,EAAA/C,QAAA,UACA+C,IAAAgB,MAAA,GACAD,GAAA,GAGAd,OACAD,IAAAkB,WAAAvF,QAAA,0BAAuD,KAAAsC,EAAAC,GAAAC,WAAA8B,YAGvD,IAAA/H,EAAA+E,QAAA,OACA+C,EAAA,KAGAE,GAAAa,EAAA,UAAAb,GAAAa,EAAA,UAAAA,GAAAZ,EAAA,QAAAH,EAAAc,GAAA,EAAAF,EAAA,OAAAP,EAAA,OAAAM,EAAA,KAAAT,GAAAa,EAAA,QAoGA,QAAAI,GAAAC,EAAAC,GACApD,EAAAmD,GAAAC,EAgEA,QAAAC,GAAAC,GACA,GAAAC,GAAAD,EAAAL,WAAApC,MAAA,IACA,OAAA0C,GAAA5C,OAAA,EACA,EAEA/B,KAAAC,IAAA,GAAA0E,EAAA,GAAA5C,QAQA,QAAA6C,KACA,GAAAC,GAAAtI,MAAAuI,UAAAX,MAAA9G,KAAA0H,UACA,OAAAF,GAAAG,OAAA,SAAAC,EAAAC,GACA,GAAAC,GAAAV,EAAAQ,GACAG,EAAAX,EAAAS,EACA,OAAAC,GAAAC,EAAAD,EAAAC,KACSC,MA5iBT,GAAAC,GACAC,EAAA,QAEAnE,KACAC,EAAA,KACAF,EAAA,KACAqE,EAAA,MAEAC,EAAA,mBAAAnL,MAAAC,OAoXA+K,GAAA,SAAAI,GASA,MARAJ,GAAAK,UAAAD,GACAA,IAAAzI,QACS,IAAAyI,GAAA,mBAAAA,GACTA,EAAA,EACSvD,OAAAuD,KACTA,EAAAJ,EAAAM,GAAAC,SAAAH,IAGA,GAAApG,GAAA6C,OAAAuD,KAIAJ,EAAAQ,QAAAP,EAGAD,EAAAK,UAAA,SAAAhL,GACA,MAAAA,aAAA2E,IAMAgG,EAAAS,SAAA,SAAAxB,EAAAC,GACA,IAAAD,EACA,MAAAlD,EAGA,IAAAkD,IAAAC,EAAA,CACA,IAAApD,EAAAmD,GACA,SAAAyB,OAAA,sBAAAzB,EAEAlD,GAAAkD,EAOA,OAJAC,GAAApD,EAAAmD,IACAD,EAAAC,EAAAC,GAGAc,GAMAA,EAAAW,aAAA,SAAA1B,GACA,IAAAA,EACA,MAAAnD,GAAAC,EAGA,KAAAD,EAAAmD,GACA,SAAAyB,OAAA,sBAAAzB,EAGA,OAAAnD,GAAAmD,IAGAe,EAAAS,SAAA,MACAzE,YACA8B,UAAA,IACA7B,QAAA,KAEAC,eACAC,SAAA,IACAG,QAAA,IACAC,QAAA,IACAC,SAAA,KAEAsC,QAAA,SAAA7E,GACA,GAAA2G,GAAA3G,EAAA,EACA,eAAAA,EAAA,aACA,IAAA2G,EAAA,KACA,IAAAA,EAAA,KACA,IAAAA,EAAA,WAEAxE,UACAC,OAAA,OAIA2D,EAAAnE,WAAA,SAAA9F,GACA8F,EAAA,mBAAA9F,EAAA,MAGAiK,EAAAE,cAAA,SAAAnK,GACAmK,EAAA,mBAAAnK,EAAA,OAsBA,kBAAAkB,OAAAuI,UAAAE,SACAzI,MAAAuI,UAAAE,OAAA,SAAAmB,EAAAC,GACA,YAEA,WAAA9I,MAAA,mBAAAA,MAIA,SAAA+I,WAAA,qDAGA,sBAAAF,GACA,SAAAE,WAAAF,EAAA,qBAGA,IAAAG,GACArJ,EACA8E,EAAAzE,KAAAyE,SAAA,EACAwE,GAAA,CAOA,KALA,EAAAxB,UAAAhD,SACA9E,EAAAmJ,EACAG,GAAA,GAGAD,EAAA,EAA2BvE,EAAAuE,IAAgBA,EAC3ChJ,KAAAkJ,eAAAF,KACAC,EACAtJ,EAAAkJ,EAAAlJ,EAAAK,KAAAgJ,KAAAhJ,OAEAL,EAAAK,KAAAgJ,GACAC,GAAA,GAKA,KAAAA,EACA,SAAAF,WAAA,8CAGA,OAAApJ,KAsCAqI,EAAAM,GAAAtG,EAAAwF,WAEA2B,MAAA,WACA,MAAAnB,GAAAhI,OAGAjC,OAAA,SAAAqL,EAAA/G,GACA,MAAAO,GAAA5C,KACAoJ,IAAAlB,EACAmB,SAAAhH,IAAAK,KAAAgD,QAIA6C,SAAA,SAAAa,GACA,0BAAAtI,OAAA0G,UAAAT,SAAAhH,KAAAqJ,GACAA,EAEAjG,EAAAnD,KAAAoJ,IAAAlB,IAGAvI,MAAA,WACA,MAAAK,MAAAkC,QAGAoH,QAAA,WACA,MAAAtJ,MAAAkC,QAGAqH,IAAA,SAAA5J,GAEA,MADAK,MAAAkC,OAAA2C,OAAAlF,GACAK,MAGAwJ,IAAA,SAAA7J,GAEA,QAAA8J,GAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAAH,GAAAI,EAAAH,EAFA,GAAAG,GAAAxC,EAAAvH,KAAA,KAAAC,KAAAkC,OAAAvC,EAKA,OADAK,MAAAkC,QAAAlC,KAAAkC,OAAAvC,GAAA+H,OAAA+B,EAAA,GAAAK,EACA9J,MAGA+J,SAAA,SAAApK,GAEA,QAAA8J,GAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAAH,GAAAI,EAAAH,EAFA,GAAAG,GAAAxC,EAAAvH,KAAA,KAAAC,KAAAkC,OAAAvC,EAKA,OADAK,MAAAkC,QAAAvC,GAAA+H,OAAA+B,EAAAzJ,KAAAkC,OAAA4H,KACA9J,MAGAgK,SAAA,SAAArK,GACA,QAAA8J,GAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAxC,EAAAoC,EAAAC,EACA,OAAAD,GAAAI,GAAAH,EAAAG,IACAA,KAGA,MADA9J,MAAAkC,QAAAlC,KAAAkC,OAAAvC,GAAA+H,OAAA+B,EAAA,GACAzJ,MAGAiK,OAAA,SAAAtK,GACA,QAAA8J,GAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAxC,EAAAoC,EAAAC,EACA,OAAAD,GAAAI,GAAAH,EAAAG,GAGA,MADA9J,MAAAkC,QAAAlC,KAAAkC,OAAAvC,GAAA+H,OAAA+B,GACAzJ,MAGAkK,WAAA,SAAAvK,GACA,MAAA+C,MAAAgE,IAAAsB,EAAAhI,KAAAkC,QAAA6H,SAAApK,cAUAwI,IACAnL,EAAAC,QAAA+K,GAIA,mBAAAmC,SAIAnK,KAAA,QAAAgI,GAKAlG,KAAAC,EAAA,WACA,MAAAiG,IACSoC,MAAAnN,EAAA6E,KAAAuH,SAAAtH,IAAA/E,EAAAC,QAAA8E,MAERhC,KAAAC,OJoJK,SAAShD,OAAQC,SAEtB,YK1zBD,SAASoN,WAAUC,GACf,GAAIC,GAAU,EAEd,QAAOD,GACH,IAAK,GACDC,EAAU,IACV,MACJ,KAAK,GACDA,EAAU,IACV,MACJ,KAAK,GACDA,EAAU,IACV,MACJ,KAAK,GACDA,EAAU,IACV,MACJ,KAAK,GACDA,EAAU,IACV,MACJ,KAAK,GACDA,EAAU,IACV,MACJ,KAAK,GACDA,EAAU,IACV,MACJ,KAAK,GACDA,EAAU,IACV,MACJ,KAAK,GACDA,EAAU,IACV,MACJ,KAAK,IACDA,EAAU,IACV,MACJ,KAAK,IACDA,EAAU,IACV,MACJ,KAAK,IACDA,EAAU,IACV,MACJ,KAAK,IACDA,EAAU,IACV,MACJ,KAAK,IACDA,EAAU,IACV,MACJ,KAAK,IACDA,EAAU,IACV,MACJ,KAAK,IACDA,EAAU,IACV,MACJ,KAAK,IACDA,EAAU,IACV,MACJ,KAAK,IACDA,EAAU,IACV,MACJ,KAAK,KACDA,EAAU,IACV,MACJ,KAAK,KACDA,EAAU,IACV,MACJ,KAAK,KACDA,EAAU,IACV,MACJ,KAAK,KACDA,EAAU,IACV,MACJ,KAAK,KACDA,EAAU,MACV,MACJ,KAAK,KACDA,EAAU,MACV,MACJ,KAAK,KACDA,EAAU,MACV,MACJ,KAAK,KACDA,EAAU,MACV,MACJ,KAAK,KACDA,EAAU,QACV,MACJ,SACIA,EAAU,GAElB,MAAOA,GAGX,QAASC,aAAYD,GACjB,GAAIE,GAAW,EAEf,QAAOF,GACH,IAAK,KACDE,EAAW,IACX,MACJ,KAAK,KACDA,EAAW,IACX,MACJ,KAAK,KACDA,EAAW,IACX,MACJ,KAAK,KACDA,EAAW,IACX,MACJ,KAAK,KACDA,EAAW,IACX,MACJ,SACIA,EAAWF,EAEnB,MAAOE,GA8WX,QAASC,OAAMC,GACX,GAAIC,GAAEhC,EAAEiC,EAAEC,EAAGC,CAsBb,OApBAH,GAAIlI,KAAK6C,OAAO,GAAKoF,EAAO,IAAM,IAClC/B,EAAIlG,KAAK6C,MAAMoF,EAAO,GACtBG,EAAI,gBAAkB,gBAAkBF,EAAKhC,EAAI,EAAM,kBAAqB+B,EACxEG,EAAI,IACJA,GAAK,GAETC,EAAMrI,KAAK6C,MAAMuF,GACbA,EAAI,GACJA,IAEJA,GAAKC,EACLF,EAAInI,KAAK6C,OAAOwF,EAAM,EAAIJ,EAAO,EAAI/B,EAAI,GAAK,GACrC,GAALiC,GAAUD,EAAI,IAAME,GAAK,eACzBC,IACY,GAALF,GAAUD,EAAI,GAAKE,GAAK,gBAC/BC,GAAO,EACK,GAALF,GAAe,GAALA,GAAe,GAALA,GAC3BE,IAEJA,GAAOrI,KAAK6C,OAAOoF,EAAO,MAAQ,KAAOjI,KAAK6C,OAAOoF,EAAO,MAAQ,KAAO,EAI/E,QAASK,MAAKC,GACV,MAASA,GAAI,KAAO,GAAOA,EAAI,KAAO,GAAKA,EAAI,GAAK,EAGxD,QAASC,gBAAeC,EAAOR,GAC3B,MAAa,IAATQ,EACO,IAAMH,KAAKL,GAAQ,EAAI,GAErB,GAATQ,GAAuB,GAATA,GAAuB,GAATA,GAAuB,IAATA,EACnC,GAEJ,GAGX,QAASC,SAAQC,EAAKF,EAAOR,GACzB,GAAkCW,GAAIC,EAAQC,EAAQC,EAAlD9E,EAAI0E,EAAKP,EAAIK,EAAOF,EAAIN,CA6B5B,KA3BAG,GAAK,EACDA,GAAK,IACLA,GAAK,GACLG,GAAK,GAGTtE,GAAKjE,KAAK6C,MAAM,EAAIuF,EAAI,GAAK,IAAMA,EAAI,IACvCQ,EAAKL,EAAI,KACTM,EAASb,MAAMY,GACX3E,GAAK4E,EAAS,IACdC,EAASD,EACT5E,GAAK,IACFqE,KAAKC,IACJtE,IAEJsE,GAAK,EACLK,GAAM,EACNC,EAASb,MAAMY,IAEfE,EAASd,MAAMY,EAAK,GAExB3E,GAAK4E,EAAS,GACdC,GAAUD,EAAS,GACnBN,IACGD,KAAKC,IACJO,IAEAV,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACpB,GAAIY,EAOJ,IALIA,EADI,GAALZ,GAAUU,EAAS,IAAM,EACjB,GACE,GAALV,GAAUU,EAAS,IAAM,EACtB,GAEA,GAAKV,EAAI,EACjBnE,GAAK+E,EACJ,KACJ/E,IAAK+E,EAmBT,MAhBAD,GAAW,EACF,IAALX,GAAWU,GAAU,KACjB7E,EAAI,IACJ8E,EAAW,EACX9E,GAAK,IAEL8E,EAAW,GAGhBX,GAAK,GACJQ,IAEI,IAALR,IACCA,GAAKW,GAGD9E,EAAI,IAAMmE,EAAI,IAAMQ,EAIhC,QAASK,QAAOC,GAEZ,GAAIC,GAAInJ,KAAK6C,MAAMqG,EAAI,KAAME,EAAIF,EAAI,GAAKlJ,KAAK6C,MAAMqG,EAAI,IAAKG,EAAIrJ,KAAK6C,OAAOsG,EAAI,IAAM,IACpFG,EAAIH,EAAInJ,KAAK6C,MAAMsG,EAAI,GAAKnJ,KAAK6C,OAAOsG,EAAIE,GAAK,GAAK,GAAKD,EAAI,EACnEE,IAAQ,GAAGtJ,KAAK6C,MAAOyG,EAAI,IAC3BA,GAAQtJ,KAAK6C,MAAMyG,EAAI,KAAO,EAAItJ,KAAK6C,MAAMyG,EAAI,IAAMtJ,KAAK6C,MAAM,IAAMyG,EAAI,IAAMtJ,KAAK6C,OAAO,GAAKuG,GAAK,IACxG,IAAIG,GAAIL,EAAIlJ,KAAK6C,MAAMqG,EAAI,GAAKI,EAAI,EAAIH,EAAInJ,KAAK6C,MAAMsG,EAAI,EAC3DI,IAAQ,EAAIvJ,KAAK6C,MAAM0G,EAAI,EAC3B,IAAIC,GAAIF,EAAIC,EAAGE,EAAI,EAAIzJ,KAAK6C,OAAO2G,EAAI,IAAM,IAAKE,EAAIF,EAAI,GAAK,GAAKxJ,KAAK6C,MAAM4G,EAAI,GAAIE,EAAM,GAAIvL,OAKjG,OAHAuL,GAAI,GAAKF,EACTE,EAAI,GAAKD,EAEFC,EAGX,QAASC,KAAIjB,EAAIF,EAAMR,GACnB,GAAIC,GAAIlI,KAAK6C,OAAO,GAAK4F,GAAO,IAC5BF,EAAIN,EAAOC,EAAGE,EAAIK,EAAQ,GAAGP,EAAI,EACjCjE,GAAK0E,EAAMJ,EAAIvI,KAAK6C,MAAM0F,EAAE,GAAKvI,KAAK6C,MAAM0F,EAAE,KAAOvI,KAAK6C,MAAM0F,EAAE,KAAOvI,KAAK6C,MAAO,GAAGuF,EAAG,KAAO,CAEtG,OAAOnE,GAAI,EAGf,QAAS4F,QAAOC,EAAIC,EAAQtB,EAAMR,GAC9B,GAAI6B,EAAM,EACN,MAAmB,IAAXA,EAAM,GAAS,GAAK,EAAIC,EAAUH,IAAgB,GAAXE,EAAM,GAAS,EAAGrB,EAAOR,IAAS,CAErF,IAAIe,GAAOR,eAAeC,EAAOR,EAEjC,OAAOe,IAAQY,IAAIZ,EAAMP,EAAOR,GAAQ8B,EAAU,GAAK,EAmBpD,QAAS5O,YAAWwN,EAAKF,EAAOR,GACnC,MAAOS,SAAQC,EAAKF,EAAOR,GAqD/B,QAAS+B,OAAMvB,EAAOR,GAClB,GAAI0B,GAAMM,SAASxB,EAAOR,EAE1B3M,SAAQC,IAAIoO,EAEZ,IAAIjO,GAASwO,eAAeP,EAC5BzN,UAASC,eAAe,UAAUC,UAAYV,EAKlD,QAASuO,UAASE,EAAMC,GACpB,GAAIhC,GAAI+B,EAAO,EACX5B,EAAI6B,EACJnG,EAAIuE,eAAeJ,EAAGG,GACtB8B,EAAe,GAAIC,MAAM/B,EAAG4B,EAAM,GAClCI,EAAWF,EAAaG,SAAW,EACnCC,EAAS,GAAIrM,OAKjB,OAJAqM,GAAO,GAAKF,EACZE,EAAO,GAAKxG,EACZwG,EAAO,GAAKrC,EACZqC,EAAO,GAAKlC,EACJkC,EAGZ,QAASP,gBAAeQ,OACpB,GAAIC,UAAW,WACXC,SAAW,UACXC,QACAC,OACAC,IAAM,GAAIT,MACVU,KAAOD,IAAIE,UACXC,OAASH,IAAII,WACbC,MAAQL,IAAIM,SACbD,OAAQ,MACPA,OAAS,KACb,IAAIE,QAASZ,MAAM,GACfa,MAAQb,MAAM,GACdc,UAAYC,UAAUC,UAAUC,SAASL,QACzCM,SAAWpD,eAAe8C,OAAQC,OAClCM,GACAC,OACAC,MACAC,IACAC,GAGJpB,SAAUnC,QAAQ,EAAG4C,OAAQC,OAC7BS,IAAMnB,QAAQqB,UAAUrB,QAAQzK,QAAQ,KAAK,EAAGyK,QAAQ9I,QACxD+J,OAASK,KAAKH,IAAIE,UAAU,EAAGF,IAAI5L,QAAQ,OAC3C2L,MAAQC,IAAIE,UAAUF,IAAI5L,QAAQ,KAAK,EAAG4L,IAAIjK,OAC9C,IAAIqK,OAAQX,UAAUC,UAAUW,SAASP,OAAO,GAAK,IAAML,UAAUC,UAAUY,SAASP,MAGxFlB,SAAUnC,QAAQkD,SAAUN,OAAQC,OACpCU,IAAMpB,QAAQqB,UAAUrB,QAAQzK,QAAQ,KAAK,EAAGyK,QAAQ9I,QACxD+J,OAASK,KAAKF,IAAIC,UAAU,EAAGD,IAAI7L,QAAQ,OAC3C2L,MAAQE,IAAIC,UAAUD,IAAI7L,QAAQ,KAAK,EAAG6L,IAAIlK,OAC9C,IAAIwK,KAAMd,UAAUC,UAAUW,SAASP,OAAO,GAAK,IAAML,UAAUC,UAAUY,SAASP,OAElFS,OAGAA,SADDR,KAAOC,IACIG,MAEAA,MAAQ,MAAQG,GAE9B,IAAI7Q,QAAS,WAET+Q,GAGJ/Q,SAAU,kGACVA,QAAW,OACXA,QAAW,iIACXA,QAAW,0BACXA,QAAY8P,UAAY,IAAMD,MAC9B7P,QAAW,UACXA,QAAW,0BACXA,QAAY,cAAgB8Q,QAC5B9Q,QAAW,UACXA,QAAW,QACXA,QAAW,OAGX,IAAIgR,SAAU,8HACVC,SAAW,cAGfjR,SAAU,wCACV,KAAK,GAAIkR,QAAS,EAAGA,OAAS,IAAKA,OAC/BlR,QAAUgR,QAAUjB,UAAUC,UAAUmB,QAAQD,QAAUD,QAE9DjR,SAAU,OAIV,IAAIoR,MAAO,EACPC,KAAO,EACP7P,GACJ,KAAKA,IAAM,EAAGA,KAAO,EAAGA,MAAO,CAE3B,IADAxB,QAAQ,oBACH+Q,IAAM,EAAGA,KAAO,EAAGA,MAAQ,CAc5B,GAXA5B,QAAUnC,QAAQqE,KAAMzB,OAAQC,OAChCT,OAASqB,KAAKtB,QAAQqB,UAAU,EAAGrB,QAAQzK,QAAQ,OAOnDyL,GAAKhB,QAAQqB,UAAUrB,QAAQzK,QAAQ,KAAK,EAAGyK,QAAQ9I,QACvD+J,OAASK,KAAKN,GAAGK,UAAU,EAAGL,GAAGzL,QAAQ,OAErC0M,KAAOpC,MAAM,GACbhP,QAAU,kCACT,CAED,GAAIsR,MAAO,EACRC,kBACCD,KAAOvB,UAAUC,UAAUwB,OAAOH,KAAMzB,OAAQC,MAAOT,OAAQgB,OAAQW,KAC3E,IAAIU,SAAU,EACXC,iBACCD,QAAU1B,UAAUC,UAAU2B,SAASN,KAAMzB,OAAQC,OAEzD,IAAI+B,GAGAA,IAFAP,MAAQ/B,MAAUN,MAAM,IAAOQ,OAAO,GAAQR,MAAM,IAAMU,MAErD,kBACQ,IAAR4B,KAEA,kBACW,IAAXG,QAEA,kBAKA,kBAGTzR,QAAU,OAAS4R,GAAK,6DACxB5R,QAAY,0DACZA,QAAc,OACdA,QAAgB,OAChBA,QAAkB,2CAA6CkP,SAAW,IAC1ElP,QAAoBqR,KACpBrR,QAAkB,UAClBA,QAAgB,QAChBA,QAAgB,OAChBA,QAAkB,2CAA6CiP,SAAW,IAC1EjP,QAAoB,oBAAsB+P,UAAUC,UAAU6B,QAAQzC,QAAU,SAChFpP,QAAkB,UAClBA,QAAgB,QAChBA,QAAc,QACdA,QAAY,WACZA,QAAY,8BACA,IAARsR,OACAtR,QAAUsR,MACF,IAARA,MAAyB,IAAXG,UACdzR,QAAU,QACC,IAAXyR,UACAzR,QAAUyR,SACdzR,QAAY,UACZA,QAAU,QAEVqR,OAGJ,KAAIA,MAAQnB,UAER,CACA,KAAOkB,KAAK,GAAI,GACZpR,QAAU,8BACVoR,MAEJ,OANAA,OAWR,GADApR,QAAU,QACPqR,KAAOrC,MAAM,GACZ,MAOR,MAJAhP,SAAU,WACVA,QAAU,6HACVA,QAAU,kLACVA,QAAU,YLhDb0C,OAAOC,eAAe9D,QAAS,cAC3B0C,OAAO,IAEX1C,QKxMeY,qBAznBhB,IAAIuQ,UAAW,KAsHX8B,YAAc,SAAUvF,GACxB,MAAOA,IAGPwF,YAAc,SAAUxF,GACxB,GAAIJ,GAAS6F,EAAQC,EAAQ,GAAIC,EAAS,GAM1C,KAJAF,GAAUzF,EAAQA,EAAO,KAAS,IAClCA,GAAc,IACd0F,GAAgBhG,UAAU+F,GAC1BA,EAAS,EACK,GAARzF,GACF0F,GAAgBhG,UAAU+F,GAC1BA,EAAUzF,EAAQA,EAAO2F,EACzB3F,GAAc2F,EACdA,GAAkB,EAItB,OAFA/F,GAAUF,UAAU+F,GACpBC,EAAQA,EAAQ,IAAM7F,YAAYD,IAKlCgG,YAAc,SAAUC,EAAMC,EAAQC,GAEtC,GAAc,GAAVD,GAAuB,GAARD,EACf,MAAO,gBACN,IAAc,GAAVC,GAAuB,IAARD,EACpB,MAAO,oBACN,IAAc,GAAVC,GAAuB,IAARD,EACpB,MAAO,iBACN,IAAc,GAAVC,GAAeD,GAAQjE,OAAO,EAAG,EAAG,EAAGmE,GAC5C,MAAO,iBACN,IAAc,GAAVD,GAAuB,IAARD,EACpB,MAAO,mBACN,IAAc,GAAVC,GAAyB,GAAVA,EAAa,CACjC,GAAIE,GAAIhF,OAAO+E,EACf,IAAID,GAAUE,EAAE,IAAMH,GAAQG,EAAE,GAC5B,MAAO,aAEV,IAAc,GAAVF,GAAeD,GAAQjE,OAAO,EAAG,EAAG,EAAGmE,GAC5C,MAAO,cACN,IAAc,GAAVD,GAAeD,GAAQjE,OAAO,EAAG,EAAG,EAAGmE,GAC5C,MAAO,kBACN,IAAc,GAAVD,GAAeD,GAAQjE,OAAO,EAAG,EAAG,EAAGmE,GAC5C,MAAO,cACN,IAAc,GAAVD,GAAuB,IAARD,EACpB,MAAO,UACN,IAAc,GAAVC,GAAeD,GAAQjE,OAAO,EAAG,EAAG,EAAGmE,GAC5C,MAAO,cACN,IAAc,GAAVD,GAAuB,GAARD,EACpB,MAAO,kBACN,IAAc,GAAVC,GAAeD,GAAQjE,OAAO,EAAG,EAAG,EAAGmE,GAC5C,MAAO,WACN,IAAc,IAAVD,GAAgBD,GAAQjE,OAAO,EAAG,EAAG,GAAImE,GAC9C,MAAO,cACN,IAAc,IAAVD,GAAwB,IAARD,EACrB,MAAO,WACN,IAAc,IAAVC,GAAwB,IAARD,EACrB,MAAO,eACN,IAAc,IAAVC,GAAgBD,GAAQjE,OAAO,EAAG,EAAG,GAAImE,GAC9C,MAAO,cACN,IAAc,IAAVD,GAAwB,IAARD,EACrB,MAAO,YAEX,MAAO,IAGPI,UAAY,QAAZA,WAAsBJ,KAAMC,OAAQC,MAAOG,KAAMC,OAAQC,KACzD,GAAIC,GAEJ,IAAa,GAAVF,OAAa,CACZ,GAAW,GAARD,MAAqB,GAARA,KACZ,MAAO,cACN,IAAW,GAARA,MAAoB,GAAPE,IACjB,MAAO,iBACN,IAAW,GAARF,MAAoB,GAAPE,IACjB,MAAO,iBACN,IAAW,IAARF,KACJ,MAAO,YACN,IAAGA,MAAQ,IAAMA,MAAQ,GAC1B,MAAO,QACN,IAAW,IAARA,KACJ,MAAO,iBAEV,IAAa,GAAVC,QACJ,GAAGD,MAAQ,GACP,MAAO,gBAEV,IAAa,GAAVC,OAAa,CACjB,GAAGD,MAAQ,EACP,MAAO,WAEN,IAAW,GAARA,KAAW,CAEJ,GAARL,MACCA,KAAO,GACPC,OAAS,IAEG,GAARD,MACJA,KAAO,GACPC,OAAS,IAGTD,MAAQ,CACZ,IAAIS,OAAQ7F,QAAQoF,KAAMC,OAAQC,MAElC,IADAM,GAAKnC,KAAKoC,MAAMrC,UAAU,EAAGqC,MAAMnO,QAAQ,OAClC,IAANkO,GACC,MAAO,gBAEV,IAAW,IAARH,KACJ,MAAO,oBAEV,IAAa,IAAVC,QACJ,GAAS,IAAND,KACC,MAAO,iBAEV,IAAa,IAAVC,QAA0B,IAAVA,OAAc,CAClC,GAAW,IAARD,MAAqB,GAAPE,IACb,MAAO,eACN,IAAW,IAARF,MAAqB,GAAPE,IAClB,MAAO,eACN,IAAW,IAARF,KACJ,MAAO,OACN,IAAW,IAARA,KACJ,MAAO,oBAEV,IAAa,GAAVC,OAAa,CAEjB,GAAW,IAARD,MAAqB,GAAPE,IACb,MAAO,iBACN,IAAW,IAARF,MAAqB,GAAPE,IAClB,MAAO,iBACN,IAAGF,MAAQ,IAAMA,MAAQ,GAC1B,MAAO,QACN,IAAW,IAARA,KACJ,MAAO,iBAEV,IAAa,GAAVC,OAAa,CACjB,GAAW,GAARD,MAAoB,GAAPE,IACZ,MAAO,gBACN,IAAW,GAARF,MAAoB,GAAPE,IACjB,MAAO,gBACN,IAAW,GAARF,MAAoB,GAAPE,KAAmB,GAAPA,IAC7B,MAAO,gBACX,IAAW,IAARF,KACC,MAAO,aACN,IAAW,IAARA,KACJ,MAAO,YACX,IAAW,IAARA,KACC,MAAO,uBAEV,IAAa,GAAVC,OAAa,CACjB,GAAW,GAARD,KACC,MAAO,SACN,IAAW,GAARA,KACJ,MAAO,kBAEV,IAAa,GAAVC,OAAa,CACjB,GAAW,IAARD,MAAqB,GAAPE,IACb,MAAO,gBACX,IAAW,IAARF,MAAqB,GAAPE,IACb,MAAO,qBAEV,IAAa,GAAVD,OAAa,CACjB,GAAW,GAARD,MAAoB,GAAPE,IACZ,MAAO,YACX,IAAW,IAARF,MAAqB,GAAPE,IACb,MAAO,YACX,IAAW,IAARF,KACC,MAAO,UAGf,MAAO,IAIPK,YAAc,SAAUV,EAAMC,EAAQC,GAEtC,GAAc,GAAVD,GAAuB,GAARD,EACf,MAAO,gCACN,IAAc,GAAVC,GAAuB,IAARD,EACpB,MAAO,2BACN,IAAc,GAAVC,GAAuB,IAARD,EACpB,MAAO,iBACN,IAAc,GAAVC,GAAeD,GAAQjE,OAAO,EAAG,EAAG,EAAGmE,GAC5C,MAAO,mBACN,IAAc,GAAVD,GAAuB,IAARD,EACpB,MAAO,yBACN,IAAc,GAAVC,GAAyB,GAAVA,EAAa,CACjC,GAAIE,GAAIhF,OAAO+E,EACf,IAAID,GAAUE,EAAE,IAAMH,GAAQG,EAAE,GAC5B,MAAO,sBAEV,IAAc,GAAVF,GAAeD,GAAQjE,OAAO,EAAG,EAAG,EAAGmE,GAC5C,MAAO,eACN,IAAc,GAAVD,GAAeD,GAAQjE,OAAO,EAAG,EAAG,EAAGmE,GAC5C,MAAO,kBACN,IAAc,GAAVD,GAAeD,GAAQjE,OAAO,EAAG,EAAG,EAAGmE,GAC5C,MAAO,iCACN,IAAc,GAAVD,GAAuB,IAARD,EACpB,MAAO,iBACN,IAAc,GAAVC,GAAeD,GAAQjE,OAAO,EAAG,EAAG,EAAGmE,GAC5C,MAAO,8BACN,IAAc,GAAVD,GAAuB,GAARD,EACpB,MAAO,mCACN,IAAc,GAAVC,GAAeD,GAAQjE,OAAO,EAAG,EAAG,EAAGmE,GAC5C,MAAO,mBACN,IAAc,IAAVD,GAAgBD,GAAQjE,OAAO,EAAG,EAAG,GAAImE,GAC9C,MAAO,yBACN,IAAc,IAAVD,GAAwB,IAARD,EACrB,MAAO,yBACN,IAAc,IAAVC,GAAwB,IAARD,EACrB,MAAO,eACN,IAAc,IAAVC,GAAgBD,GAAQjE,OAAO,EAAG,EAAG,GAAImE,GAC9C,MAAO,mBACN,IAAc,IAAVD,GAAwB,IAARD,EACrB,MAAO,kBAEX,MAAO,IAGPW,UAAY,QAAZA,WAAsBX,KAAMC,OAAQC,MAAOG,KAAMC,OAAQC,KACzD,GAAIC,GAEJ,IAAa,GAAVF,OAAa,CACZ,GAAW,GAARD,MAAqB,GAARA,KACZ,MAAO,iBACN,IAAW,GAARA,MAAoB,GAAPE,IACjB,MAAO,mBACN,IAAW,GAARF,MAAoB,GAAPE,IACjB,MAAO,mBACN,IAAW,IAARF,KACJ,MAAO,mBACN,IAAGA,MAAQ,IAAMA,MAAQ,GAC1B,MAAO,YACN,IAAW,IAARA,KACJ,MAAO,sBAEV,IAAa,GAAVC,QACJ,GAAGD,MAAQ,GACP,MAAO,iBAEV,IAAa,GAAVC,OAAa,CACjB,GAAGD,MAAQ,EACP,MAAO,YAEN,IAAW,GAARA,KAAW,CAEJ,GAARL,MACCA,KAAO,GACPC,OAAS,IAEG,GAARD,MACJA,KAAO,GACPC,OAAS,IAGTD,MAAQ,CACZ,IAAIS,OAAQ7F,QAAQoF,KAAMC,OAAQC,MAElC,IADAM,GAAKnC,KAAKoC,MAAMrC,UAAU,EAAGqC,MAAMnO,QAAQ,OAClC,IAANkO,GACC,MAAO,iBAEV,IAAW,IAARH,KACJ,MAAO,+BAEV,IAAa,IAAVC,QACJ,GAAS,IAAND,KACC,MAAO,qBAEV,IAAa,IAAVC,QAA0B,IAAVA,OAAc,CAClC,GAAW,IAARD,MAAqB,GAAPE,IACb,MAAO,qBACN,IAAW,IAARF,MAAqB,GAAPE,IAClB,MAAO,qBACN,IAAW,IAARF,KACJ,MAAO,YACN,IAAW,IAARA,KACJ,MAAO,0BAEV,IAAa,GAAVC,OAAa,CACjB,GAAW,IAARD,MAAqB,GAAPE,IACb,MAAO,yBACN,IAAW,IAARF,MAAqB,GAAPE,IAClB,MAAO,yBACN,IAAGF,MAAQ,IAAMA,MAAQ,GAC1B,MAAO,QACN,IAAW,IAARA,KACJ,MAAO,kBAEV,IAAa,GAAVC,OAAa,CACjB,GAAW,GAARD,MAAoB,GAAPE,IACZ,MAAO,uBACN,IAAW,GAARF,MAAoB,GAAPE,IACjB,MAAO,uBACN,IAAW,GAARF,MAAoB,GAAPE,KAAmB,GAAPA,IAC7B,MAAO,uBACX,IAAW,IAARF,KACC,MAAO,eACN,IAAW,IAARA,KACJ,MAAO,kBACX,IAAW,IAARA,KACC,MAAO,4BAEV,IAAa,GAAVC,OAAa,CACjB,GAAW,GAARD,KACC,MAAO,cACN,IAAW,GAARA,KACJ,MAAO,wBAEV,IAAa,GAAVC,OAAa,CACjB,GAAW,IAARD,MAAqB,GAAPE,IACb,MAAO,yBACX,IAAW,IAARF,MAAqB,GAAPE,IACb,MAAO,8BAEV,IAAa,GAAVD,OAAa,CACjB,GAAW,GAARD,MAAoB,GAAPE,IACZ,MAAO,iBACX,IAAW,IAARF,MAAqB,GAAPE,IACb,MAAO,iBACX,IAAW,IAARF,KACC,MAAO,eAEf,MAAO,IAGP1C,WACAiD,IACIrC,UAAY,QAAS,QAAS,QAAS,SAAU,KAAM,OACnD,UAAW,WAAY,SAAU,QAAS,SAC1C,OAAQ,SAAU,WACtBkB,SAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACnD,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACtD,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC1D5B,UAAW,UAAW,WAAY,QAAS,QAAS,MAAO,OACvD,OAAQ,SAAU,YAAa,UAAW,WAAY,YAC1DkB,SAAU,MAAO,MAAO,OAAQ,MAAO,OAAQ,MAAO,WACtDP,SAAUkB,YACVH,SAAUQ,YACVX,OAAQgB,WAEZS,IACItC,UAAY,QAAS,QAAS,QAAS,SAAU,KAAM,OACnD,UAAW,WAAY,SAAU,QAAS,SAC1C,OAAQ,SAAU,WACtBkB,SAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACnD,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACtD,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC1D5B,UAAW,UAAW,WAAY,QAAS,QAAS,MAAO,OACvD,OAAQ,SAAU,YAAa,UAAW,WAAY,YAC1DkB,SAAU,MAAO,MAAO,OAAQ,MAAO,OAAQ,MAAO,WACtDP,SAAUmB,YACVJ,SAAUmB,YACVtB,OAAQuB,YAmNZxB,eAAiB,EACjBG,cAAgB,CA8MpBpD,OAAM,EAAG","file":"main.0a91e838efa1b093244e.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\t__webpack_require__(1);\n\t\n\tvar _userApi = __webpack_require__(3);\n\t\n\tvar _numeral = __webpack_require__(6);\n\t\n\tvar _numeral2 = _interopRequireDefault(_numeral);\n\t\n\tvar _zmanim = __webpack_require__(7);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar curHebDate = (0, _zmanim.getHebDate)(10, 9, 2017);\n\t\n\tvar courseValue = (0, _numeral2.default)(1000).format('$0,0.00');\n\tconsole.log('I would pay ' + courseValue + ' for this awesome course!'); // eslint-disable-line no-console\n\t\n\tconsole.log('Today Hebrew date is: ' + curHebDate + ' !'); // eslint-disable-line no-console\n\t\n\t\n\t// Populate table of users via API call\n\t(0, _userApi.getUsers)().then(function (result) {\n\t    var usersBody = \"\";\n\t\n\t    result.forEach(function (user) {\n\t        usersBody += '<tr>\\n<td><a href=\"#\" data-id=\"' + user.id + '\" class=\"deleteUser\">Delete</a></td>\\n<td>' + user.id + '</td>\\n<td>' + user.firstName + '</td>\\n<td>' + user.lastName + '</td>\\n<td>' + user.email + '</td>\\n</tr>';\n\t    });\n\t\n\t    global.document.getElementById('users').innerHTML = usersBody;\n\t\n\t    var deleteLinks = global.document.getElementsByClassName('deleteUser');\n\t\n\t    Array.from(deleteLinks, function (link) {\n\t        link.onclick = function (event) {\n\t            var element = event.target;\n\t            event.preventDefault();\n\t            (0, _userApi.deleteUser)(element.attributes[\"data-id\"].value);\n\t            var row = element.parentNode.parentNode;\n\t            row.parentNode.removeChild(row);\n\t        };\n\t    });\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 2 */,\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.getUsers = getUsers;\n\texports.deleteUser = deleteUser;\n\t\n\t__webpack_require__(4);\n\t\n\tvar _baseUrl = __webpack_require__(5);\n\t\n\tvar _baseUrl2 = _interopRequireDefault(_baseUrl);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar baseUrl = (0, _baseUrl2.default)();\n\t\n\tfunction getUsers() {\n\t    return get('users');\n\t}\n\t\n\tfunction deleteUser(id) {\n\t    return del('users/' + id);\n\t}\n\t\n\tfunction get(url) {\n\t    return fetch(baseUrl + url).then(onSuccess, onError);\n\t}\n\t\n\t// Can't call func delete since reserved word.\n\tfunction del(url) {\n\t    var request = new Request(baseUrl + url, {\n\t        method: 'DELETE'\n\t    });\n\t\n\t    return fetch(request).then(onSuccess, onError);\n\t}\n\t\n\tfunction onSuccess(response) {\n\t    return response.json();\n\t}\n\t\n\tfunction onError(error) {\n\t    console.log(error); // eslint-disable-line no-console\n\t}\n\n/***/ },\n/* 4 */,\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = getBaseUrl;\n\tfunction getBaseUrl() {\n\t  return getQueryStringParameterByName('useMockApi') ? 'http://localhost:3001/' : '/';\n\t}\n\t\n\tfunction getQueryStringParameterByName(name, url) {\n\t  if (!url) {\n\t    url = window.location.href;\n\t  }\n\t  name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n\t  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n\t      results = regex.exec(url);\n\t  if (!results) {\n\t    return null;\n\t  }\n\t  if (!results[2]) {\n\t    return '';\n\t  }\n\t  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n\t}\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t * numeral.js\n\t * version : 1.5.3\n\t * author : Adam Draper\n\t * license : MIT\n\t * http://adamwdraper.github.com/Numeral-js/\n\t */\n\t\n\t(function () {\n\t\n\t    /************************************\n\t        Constants\n\t    ************************************/\n\t\n\t    var numeral,\n\t        VERSION = '1.5.3',\n\t        // internal storage for language config files\n\t        languages = {},\n\t        currentLanguage = 'en',\n\t        zeroFormat = null,\n\t        defaultFormat = '0,0',\n\t        // check for nodeJS\n\t        hasModule = (typeof module !== 'undefined' && module.exports);\n\t\n\t\n\t    /************************************\n\t        Constructors\n\t    ************************************/\n\t\n\t\n\t    // Numeral prototype object\n\t    function Numeral (number) {\n\t        this._value = number;\n\t    }\n\t\n\t    /**\n\t     * Implementation of toFixed() that treats floats more like decimals\n\t     *\n\t     * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present\n\t     * problems for accounting- and finance-related software.\n\t     */\n\t    function toFixed (value, precision, roundingFunction, optionals) {\n\t        var power = Math.pow(10, precision),\n\t            optionalsRegExp,\n\t            output;\n\t            \n\t        //roundingFunction = (roundingFunction !== undefined ? roundingFunction : Math.round);\n\t        // Multiply up by precision, round accurately, then divide and use native toFixed():\n\t        output = (roundingFunction(value * power) / power).toFixed(precision);\n\t\n\t        if (optionals) {\n\t            optionalsRegExp = new RegExp('0{1,' + optionals + '}$');\n\t            output = output.replace(optionalsRegExp, '');\n\t        }\n\t\n\t        return output;\n\t    }\n\t\n\t    /************************************\n\t        Formatting\n\t    ************************************/\n\t\n\t    // determine what type of formatting we need to do\n\t    function formatNumeral (n, format, roundingFunction) {\n\t        var output;\n\t\n\t        // figure out what kind of format we are dealing with\n\t        if (format.indexOf('$') > -1) { // currency!!!!!\n\t            output = formatCurrency(n, format, roundingFunction);\n\t        } else if (format.indexOf('%') > -1) { // percentage\n\t            output = formatPercentage(n, format, roundingFunction);\n\t        } else if (format.indexOf(':') > -1) { // time\n\t            output = formatTime(n, format);\n\t        } else { // plain ol' numbers or bytes\n\t            output = formatNumber(n._value, format, roundingFunction);\n\t        }\n\t\n\t        // return string\n\t        return output;\n\t    }\n\t\n\t    // revert to number\n\t    function unformatNumeral (n, string) {\n\t        var stringOriginal = string,\n\t            thousandRegExp,\n\t            millionRegExp,\n\t            billionRegExp,\n\t            trillionRegExp,\n\t            suffixes = ['KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n\t            bytesMultiplier = false,\n\t            power;\n\t\n\t        if (string.indexOf(':') > -1) {\n\t            n._value = unformatTime(string);\n\t        } else {\n\t            if (string === zeroFormat) {\n\t                n._value = 0;\n\t            } else {\n\t                if (languages[currentLanguage].delimiters.decimal !== '.') {\n\t                    string = string.replace(/\\./g,'').replace(languages[currentLanguage].delimiters.decimal, '.');\n\t                }\n\t\n\t                // see if abbreviations are there so that we can multiply to the correct number\n\t                thousandRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.thousand + '(?:\\\\)|(\\\\' + languages[currentLanguage].currency.symbol + ')?(?:\\\\))?)?$');\n\t                millionRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.million + '(?:\\\\)|(\\\\' + languages[currentLanguage].currency.symbol + ')?(?:\\\\))?)?$');\n\t                billionRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.billion + '(?:\\\\)|(\\\\' + languages[currentLanguage].currency.symbol + ')?(?:\\\\))?)?$');\n\t                trillionRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.trillion + '(?:\\\\)|(\\\\' + languages[currentLanguage].currency.symbol + ')?(?:\\\\))?)?$');\n\t\n\t                // see if bytes are there so that we can multiply to the correct number\n\t                for (power = 0; power <= suffixes.length; power++) {\n\t                    bytesMultiplier = (string.indexOf(suffixes[power]) > -1) ? Math.pow(1024, power + 1) : false;\n\t\n\t                    if (bytesMultiplier) {\n\t                        break;\n\t                    }\n\t                }\n\t\n\t                // do some math to create our number\n\t                n._value = ((bytesMultiplier) ? bytesMultiplier : 1) * ((stringOriginal.match(thousandRegExp)) ? Math.pow(10, 3) : 1) * ((stringOriginal.match(millionRegExp)) ? Math.pow(10, 6) : 1) * ((stringOriginal.match(billionRegExp)) ? Math.pow(10, 9) : 1) * ((stringOriginal.match(trillionRegExp)) ? Math.pow(10, 12) : 1) * ((string.indexOf('%') > -1) ? 0.01 : 1) * (((string.split('-').length + Math.min(string.split('(').length-1, string.split(')').length-1)) % 2)? 1: -1) * Number(string.replace(/[^0-9\\.]+/g, ''));\n\t\n\t                // round if we are talking about bytes\n\t                n._value = (bytesMultiplier) ? Math.ceil(n._value) : n._value;\n\t            }\n\t        }\n\t        return n._value;\n\t    }\n\t\n\t    function formatCurrency (n, format, roundingFunction) {\n\t        var symbolIndex = format.indexOf('$'),\n\t            openParenIndex = format.indexOf('('),\n\t            minusSignIndex = format.indexOf('-'),\n\t            space = '',\n\t            spliceIndex,\n\t            output;\n\t\n\t        // check for space before or after currency\n\t        if (format.indexOf(' $') > -1) {\n\t            space = ' ';\n\t            format = format.replace(' $', '');\n\t        } else if (format.indexOf('$ ') > -1) {\n\t            space = ' ';\n\t            format = format.replace('$ ', '');\n\t        } else {\n\t            format = format.replace('$', '');\n\t        }\n\t\n\t        // format the number\n\t        output = formatNumber(n._value, format, roundingFunction);\n\t\n\t        // position the symbol\n\t        if (symbolIndex <= 1) {\n\t            if (output.indexOf('(') > -1 || output.indexOf('-') > -1) {\n\t                output = output.split('');\n\t                spliceIndex = 1;\n\t                if (symbolIndex < openParenIndex || symbolIndex < minusSignIndex){\n\t                    // the symbol appears before the \"(\" or \"-\"\n\t                    spliceIndex = 0;\n\t                }\n\t                output.splice(spliceIndex, 0, languages[currentLanguage].currency.symbol + space);\n\t                output = output.join('');\n\t            } else {\n\t                output = languages[currentLanguage].currency.symbol + space + output;\n\t            }\n\t        } else {\n\t            if (output.indexOf(')') > -1) {\n\t                output = output.split('');\n\t                output.splice(-1, 0, space + languages[currentLanguage].currency.symbol);\n\t                output = output.join('');\n\t            } else {\n\t                output = output + space + languages[currentLanguage].currency.symbol;\n\t            }\n\t        }\n\t\n\t        return output;\n\t    }\n\t\n\t    function formatPercentage (n, format, roundingFunction) {\n\t        var space = '',\n\t            output,\n\t            value = n._value * 100;\n\t\n\t        // check for space before %\n\t        if (format.indexOf(' %') > -1) {\n\t            space = ' ';\n\t            format = format.replace(' %', '');\n\t        } else {\n\t            format = format.replace('%', '');\n\t        }\n\t\n\t        output = formatNumber(value, format, roundingFunction);\n\t        \n\t        if (output.indexOf(')') > -1 ) {\n\t            output = output.split('');\n\t            output.splice(-1, 0, space + '%');\n\t            output = output.join('');\n\t        } else {\n\t            output = output + space + '%';\n\t        }\n\t\n\t        return output;\n\t    }\n\t\n\t    function formatTime (n) {\n\t        var hours = Math.floor(n._value/60/60),\n\t            minutes = Math.floor((n._value - (hours * 60 * 60))/60),\n\t            seconds = Math.round(n._value - (hours * 60 * 60) - (minutes * 60));\n\t        return hours + ':' + ((minutes < 10) ? '0' + minutes : minutes) + ':' + ((seconds < 10) ? '0' + seconds : seconds);\n\t    }\n\t\n\t    function unformatTime (string) {\n\t        var timeArray = string.split(':'),\n\t            seconds = 0;\n\t        // turn hours and minutes into seconds and add them all up\n\t        if (timeArray.length === 3) {\n\t            // hours\n\t            seconds = seconds + (Number(timeArray[0]) * 60 * 60);\n\t            // minutes\n\t            seconds = seconds + (Number(timeArray[1]) * 60);\n\t            // seconds\n\t            seconds = seconds + Number(timeArray[2]);\n\t        } else if (timeArray.length === 2) {\n\t            // minutes\n\t            seconds = seconds + (Number(timeArray[0]) * 60);\n\t            // seconds\n\t            seconds = seconds + Number(timeArray[1]);\n\t        }\n\t        return Number(seconds);\n\t    }\n\t\n\t    function formatNumber (value, format, roundingFunction) {\n\t        var negP = false,\n\t            signed = false,\n\t            optDec = false,\n\t            abbr = '',\n\t            abbrK = false, // force abbreviation to thousands\n\t            abbrM = false, // force abbreviation to millions\n\t            abbrB = false, // force abbreviation to billions\n\t            abbrT = false, // force abbreviation to trillions\n\t            abbrForce = false, // force abbreviation\n\t            bytes = '',\n\t            ord = '',\n\t            abs = Math.abs(value),\n\t            suffixes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n\t            min,\n\t            max,\n\t            power,\n\t            w,\n\t            precision,\n\t            thousands,\n\t            d = '',\n\t            neg = false;\n\t\n\t        // check if number is zero and a custom zero format has been set\n\t        if (value === 0 && zeroFormat !== null) {\n\t            return zeroFormat;\n\t        } else {\n\t            // see if we should use parentheses for negative number or if we should prefix with a sign\n\t            // if both are present we default to parentheses\n\t            if (format.indexOf('(') > -1) {\n\t                negP = true;\n\t                format = format.slice(1, -1);\n\t            } else if (format.indexOf('+') > -1) {\n\t                signed = true;\n\t                format = format.replace(/\\+/g, '');\n\t            }\n\t\n\t            // see if abbreviation is wanted\n\t            if (format.indexOf('a') > -1) {\n\t                // check if abbreviation is specified\n\t                abbrK = format.indexOf('aK') >= 0;\n\t                abbrM = format.indexOf('aM') >= 0;\n\t                abbrB = format.indexOf('aB') >= 0;\n\t                abbrT = format.indexOf('aT') >= 0;\n\t                abbrForce = abbrK || abbrM || abbrB || abbrT;\n\t\n\t                // check for space before abbreviation\n\t                if (format.indexOf(' a') > -1) {\n\t                    abbr = ' ';\n\t                    format = format.replace(' a', '');\n\t                } else {\n\t                    format = format.replace('a', '');\n\t                }\n\t\n\t                if (abs >= Math.pow(10, 12) && !abbrForce || abbrT) {\n\t                    // trillion\n\t                    abbr = abbr + languages[currentLanguage].abbreviations.trillion;\n\t                    value = value / Math.pow(10, 12);\n\t                } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9) && !abbrForce || abbrB) {\n\t                    // billion\n\t                    abbr = abbr + languages[currentLanguage].abbreviations.billion;\n\t                    value = value / Math.pow(10, 9);\n\t                } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6) && !abbrForce || abbrM) {\n\t                    // million\n\t                    abbr = abbr + languages[currentLanguage].abbreviations.million;\n\t                    value = value / Math.pow(10, 6);\n\t                } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3) && !abbrForce || abbrK) {\n\t                    // thousand\n\t                    abbr = abbr + languages[currentLanguage].abbreviations.thousand;\n\t                    value = value / Math.pow(10, 3);\n\t                }\n\t            }\n\t\n\t            // see if we are formatting bytes\n\t            if (format.indexOf('b') > -1) {\n\t                // check for space before\n\t                if (format.indexOf(' b') > -1) {\n\t                    bytes = ' ';\n\t                    format = format.replace(' b', '');\n\t                } else {\n\t                    format = format.replace('b', '');\n\t                }\n\t\n\t                for (power = 0; power <= suffixes.length; power++) {\n\t                    min = Math.pow(1024, power);\n\t                    max = Math.pow(1024, power+1);\n\t\n\t                    if (value >= min && value < max) {\n\t                        bytes = bytes + suffixes[power];\n\t                        if (min > 0) {\n\t                            value = value / min;\n\t                        }\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t\n\t            // see if ordinal is wanted\n\t            if (format.indexOf('o') > -1) {\n\t                // check for space before\n\t                if (format.indexOf(' o') > -1) {\n\t                    ord = ' ';\n\t                    format = format.replace(' o', '');\n\t                } else {\n\t                    format = format.replace('o', '');\n\t                }\n\t\n\t                ord = ord + languages[currentLanguage].ordinal(value);\n\t            }\n\t\n\t            if (format.indexOf('[.]') > -1) {\n\t                optDec = true;\n\t                format = format.replace('[.]', '.');\n\t            }\n\t\n\t            w = value.toString().split('.')[0];\n\t            precision = format.split('.')[1];\n\t            thousands = format.indexOf(',');\n\t\n\t            if (precision) {\n\t                if (precision.indexOf('[') > -1) {\n\t                    precision = precision.replace(']', '');\n\t                    precision = precision.split('[');\n\t                    d = toFixed(value, (precision[0].length + precision[1].length), roundingFunction, precision[1].length);\n\t                } else {\n\t                    d = toFixed(value, precision.length, roundingFunction);\n\t                }\n\t\n\t                w = d.split('.')[0];\n\t\n\t                if (d.split('.')[1].length) {\n\t                    d = languages[currentLanguage].delimiters.decimal + d.split('.')[1];\n\t                } else {\n\t                    d = '';\n\t                }\n\t\n\t                if (optDec && Number(d.slice(1)) === 0) {\n\t                    d = '';\n\t                }\n\t            } else {\n\t                w = toFixed(value, null, roundingFunction);\n\t            }\n\t\n\t            // format number\n\t            if (w.indexOf('-') > -1) {\n\t                w = w.slice(1);\n\t                neg = true;\n\t            }\n\t\n\t            if (thousands > -1) {\n\t                w = w.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + languages[currentLanguage].delimiters.thousands);\n\t            }\n\t\n\t            if (format.indexOf('.') === 0) {\n\t                w = '';\n\t            }\n\t\n\t            return ((negP && neg) ? '(' : '') + ((!negP && neg) ? '-' : '') + ((!neg && signed) ? '+' : '') + w + d + ((ord) ? ord : '') + ((abbr) ? abbr : '') + ((bytes) ? bytes : '') + ((negP && neg) ? ')' : '');\n\t        }\n\t    }\n\t\n\t    /************************************\n\t        Top Level Functions\n\t    ************************************/\n\t\n\t    numeral = function (input) {\n\t        if (numeral.isNumeral(input)) {\n\t            input = input.value();\n\t        } else if (input === 0 || typeof input === 'undefined') {\n\t            input = 0;\n\t        } else if (!Number(input)) {\n\t            input = numeral.fn.unformat(input);\n\t        }\n\t\n\t        return new Numeral(Number(input));\n\t    };\n\t\n\t    // version number\n\t    numeral.version = VERSION;\n\t\n\t    // compare numeral object\n\t    numeral.isNumeral = function (obj) {\n\t        return obj instanceof Numeral;\n\t    };\n\t\n\t    // This function will load languages and then set the global language.  If\n\t    // no arguments are passed in, it will simply return the current global\n\t    // language key.\n\t    numeral.language = function (key, values) {\n\t        if (!key) {\n\t            return currentLanguage;\n\t        }\n\t\n\t        if (key && !values) {\n\t            if(!languages[key]) {\n\t                throw new Error('Unknown language : ' + key);\n\t            }\n\t            currentLanguage = key;\n\t        }\n\t\n\t        if (values || !languages[key]) {\n\t            loadLanguage(key, values);\n\t        }\n\t\n\t        return numeral;\n\t    };\n\t    \n\t    // This function provides access to the loaded language data.  If\n\t    // no arguments are passed in, it will simply return the current\n\t    // global language object.\n\t    numeral.languageData = function (key) {\n\t        if (!key) {\n\t            return languages[currentLanguage];\n\t        }\n\t        \n\t        if (!languages[key]) {\n\t            throw new Error('Unknown language : ' + key);\n\t        }\n\t        \n\t        return languages[key];\n\t    };\n\t\n\t    numeral.language('en', {\n\t        delimiters: {\n\t            thousands: ',',\n\t            decimal: '.'\n\t        },\n\t        abbreviations: {\n\t            thousand: 'k',\n\t            million: 'm',\n\t            billion: 'b',\n\t            trillion: 't'\n\t        },\n\t        ordinal: function (number) {\n\t            var b = number % 10;\n\t            return (~~ (number % 100 / 10) === 1) ? 'th' :\n\t                (b === 1) ? 'st' :\n\t                (b === 2) ? 'nd' :\n\t                (b === 3) ? 'rd' : 'th';\n\t        },\n\t        currency: {\n\t            symbol: '$'\n\t        }\n\t    });\n\t\n\t    numeral.zeroFormat = function (format) {\n\t        zeroFormat = typeof(format) === 'string' ? format : null;\n\t    };\n\t\n\t    numeral.defaultFormat = function (format) {\n\t        defaultFormat = typeof(format) === 'string' ? format : '0.0';\n\t    };\n\t\n\t    /************************************\n\t        Helpers\n\t    ************************************/\n\t\n\t    function loadLanguage(key, values) {\n\t        languages[key] = values;\n\t    }\n\t\n\t    /************************************\n\t        Floating-point helpers\n\t    ************************************/\n\t\n\t    // The floating-point helper functions and implementation\n\t    // borrows heavily from sinful.js: http://guipn.github.io/sinful.js/\n\t\n\t    /**\n\t     * Array.prototype.reduce for browsers that don't support it\n\t     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce#Compatibility\n\t     */\n\t    if ('function' !== typeof Array.prototype.reduce) {\n\t        Array.prototype.reduce = function (callback, opt_initialValue) {\n\t            'use strict';\n\t            \n\t            if (null === this || 'undefined' === typeof this) {\n\t                // At the moment all modern browsers, that support strict mode, have\n\t                // native implementation of Array.prototype.reduce. For instance, IE8\n\t                // does not support strict mode, so this check is actually useless.\n\t                throw new TypeError('Array.prototype.reduce called on null or undefined');\n\t            }\n\t            \n\t            if ('function' !== typeof callback) {\n\t                throw new TypeError(callback + ' is not a function');\n\t            }\n\t\n\t            var index,\n\t                value,\n\t                length = this.length >>> 0,\n\t                isValueSet = false;\n\t\n\t            if (1 < arguments.length) {\n\t                value = opt_initialValue;\n\t                isValueSet = true;\n\t            }\n\t\n\t            for (index = 0; length > index; ++index) {\n\t                if (this.hasOwnProperty(index)) {\n\t                    if (isValueSet) {\n\t                        value = callback(value, this[index], index, this);\n\t                    } else {\n\t                        value = this[index];\n\t                        isValueSet = true;\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (!isValueSet) {\n\t                throw new TypeError('Reduce of empty array with no initial value');\n\t            }\n\t\n\t            return value;\n\t        };\n\t    }\n\t\n\t    \n\t    /**\n\t     * Computes the multiplier necessary to make x >= 1,\n\t     * effectively eliminating miscalculations caused by\n\t     * finite precision.\n\t     */\n\t    function multiplier(x) {\n\t        var parts = x.toString().split('.');\n\t        if (parts.length < 2) {\n\t            return 1;\n\t        }\n\t        return Math.pow(10, parts[1].length);\n\t    }\n\t\n\t    /**\n\t     * Given a variable number of arguments, returns the maximum\n\t     * multiplier that must be used to normalize an operation involving\n\t     * all of them.\n\t     */\n\t    function correctionFactor() {\n\t        var args = Array.prototype.slice.call(arguments);\n\t        return args.reduce(function (prev, next) {\n\t            var mp = multiplier(prev),\n\t                mn = multiplier(next);\n\t        return mp > mn ? mp : mn;\n\t        }, -Infinity);\n\t    }        \n\t\n\t\n\t    /************************************\n\t        Numeral Prototype\n\t    ************************************/\n\t\n\t\n\t    numeral.fn = Numeral.prototype = {\n\t\n\t        clone : function () {\n\t            return numeral(this);\n\t        },\n\t\n\t        format : function (inputString, roundingFunction) {\n\t            return formatNumeral(this, \n\t                  inputString ? inputString : defaultFormat, \n\t                  (roundingFunction !== undefined) ? roundingFunction : Math.round\n\t              );\n\t        },\n\t\n\t        unformat : function (inputString) {\n\t            if (Object.prototype.toString.call(inputString) === '[object Number]') { \n\t                return inputString; \n\t            }\n\t            return unformatNumeral(this, inputString ? inputString : defaultFormat);\n\t        },\n\t\n\t        value : function () {\n\t            return this._value;\n\t        },\n\t\n\t        valueOf : function () {\n\t            return this._value;\n\t        },\n\t\n\t        set : function (value) {\n\t            this._value = Number(value);\n\t            return this;\n\t        },\n\t\n\t        add : function (value) {\n\t            var corrFactor = correctionFactor.call(null, this._value, value);\n\t            function cback(accum, curr, currI, O) {\n\t                return accum + corrFactor * curr;\n\t            }\n\t            this._value = [this._value, value].reduce(cback, 0) / corrFactor;\n\t            return this;\n\t        },\n\t\n\t        subtract : function (value) {\n\t            var corrFactor = correctionFactor.call(null, this._value, value);\n\t            function cback(accum, curr, currI, O) {\n\t                return accum - corrFactor * curr;\n\t            }\n\t            this._value = [value].reduce(cback, this._value * corrFactor) / corrFactor;            \n\t            return this;\n\t        },\n\t\n\t        multiply : function (value) {\n\t            function cback(accum, curr, currI, O) {\n\t                var corrFactor = correctionFactor(accum, curr);\n\t                return (accum * corrFactor) * (curr * corrFactor) /\n\t                    (corrFactor * corrFactor);\n\t            }\n\t            this._value = [this._value, value].reduce(cback, 1);\n\t            return this;\n\t        },\n\t\n\t        divide : function (value) {\n\t            function cback(accum, curr, currI, O) {\n\t                var corrFactor = correctionFactor(accum, curr);\n\t                return (accum * corrFactor) / (curr * corrFactor);\n\t            }\n\t            this._value = [this._value, value].reduce(cback);            \n\t            return this;\n\t        },\n\t\n\t        difference : function (value) {\n\t            return Math.abs(numeral(this._value).subtract(value).value());\n\t        }\n\t\n\t    };\n\t\n\t    /************************************\n\t        Exposing Numeral\n\t    ************************************/\n\t\n\t    // CommonJS module is defined\n\t    if (hasModule) {\n\t        module.exports = numeral;\n\t    }\n\t\n\t    /*global ender:false */\n\t    if (typeof ender === 'undefined') {\n\t        // here, `this` means `window` in the browser, or `global` on the server\n\t        // add `numeral` as a global object via a string identifier,\n\t        // for Closure Compiler 'advanced' mode\n\t        this['numeral'] = numeral;\n\t    }\n\t\n\t    /*global define:false */\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t            return numeral;\n\t        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    }\n\t}).call(this);\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.getHebDate = getHebDate;\n\tvar currLang = 'en';\n\t\n\tfunction getHebABC(charNum) {\n\t    var curChar = \"\";\n\t\n\t    switch (charNum) {\n\t        case 1:\n\t            curChar = \"×\";\n\t            break;\n\t        case 2:\n\t            curChar = \"×‘\";\n\t            break;\n\t        case 3:\n\t            curChar = \"×’\";\n\t            break;\n\t        case 4:\n\t            curChar = \"×“\";\n\t            break;\n\t        case 5:\n\t            curChar = \"×”\";\n\t            break;\n\t        case 6:\n\t            curChar = \"×•\";\n\t            break;\n\t        case 7:\n\t            curChar = \"×–\";\n\t            break;\n\t        case 8:\n\t            curChar = \"×—\";\n\t            break;\n\t        case 9:\n\t            curChar = \"×˜\";\n\t            break;\n\t        case 10:\n\t            curChar = \"×™\";\n\t            break;\n\t        case 20:\n\t            curChar = \"×›\";\n\t            break;\n\t        case 30:\n\t            curChar = \"×œ\";\n\t            break;\n\t        case 40:\n\t            curChar = \"×ž\";\n\t            break;\n\t        case 50:\n\t            curChar = \"× \";\n\t            break;\n\t        case 60:\n\t            curChar = \"×¡\";\n\t            break;\n\t        case 70:\n\t            curChar = \"×¢\";\n\t            break;\n\t        case 80:\n\t            curChar = \"×¤\";\n\t            break;\n\t        case 90:\n\t            curChar = \"×¦\";\n\t            break;\n\t        case 100:\n\t            curChar = \"×§\";\n\t            break;\n\t        case 200:\n\t            curChar = \"×¨\";\n\t            break;\n\t        case 300:\n\t            curChar = \"×©\";\n\t            break;\n\t        case 400:\n\t            curChar = \"×ª\";\n\t            break;\n\t        case 500:\n\t            curChar = \"×ª×§\";\n\t            break;\n\t        case 600:\n\t            curChar = \"×ª×¨\";\n\t            break;\n\t        case 700:\n\t            curChar = \"×ª×©\";\n\t            break;\n\t        case 800:\n\t            curChar = \"×ª×ª\";\n\t            break;\n\t        case 900:\n\t            curChar = \"×ª×ª×§\";\n\t            break;\n\t        default:\n\t            curChar = \"\";\n\t    }\n\t    return curChar;\n\t}\n\t\n\tfunction setLastChar(curChar) {\n\t    var lastChar = \"\";\n\t\n\t    switch (curChar) {\n\t        case \"×›\":\n\t            lastChar = \"×š\";\n\t            break;\n\t        case \"×ž\":\n\t            lastChar = \"×\";\n\t            break;\n\t        case \"× \":\n\t            lastChar = \"×Ÿ\";\n\t            break;\n\t        case \"×¤\":\n\t            lastChar = \"×£\";\n\t            break;\n\t        case \"×¦\":\n\t            lastChar = \"×¥\";\n\t            break;\n\t        default:\n\t            lastChar = curChar;\n\t    }\n\t    return lastChar;\n\t}\n\t\n\tvar en_hHebYear = function en_hHebYear(year) {\n\t    return year;\n\t};\n\t\n\tvar he_hHebYear = function he_hHebYear(year) {\n\t    var curChar,\n\t        curNum,\n\t        hebYr = \"\",\n\t        curDiv = 100;\n\t\n\t    curNum = (year - year % 1000) / 1000;\n\t    year = year % 1000;\n\t    hebYr = hebYr + getHebABC(curNum);\n\t    curNum = 0;\n\t    while (year != 0) {\n\t        hebYr = hebYr + getHebABC(curNum);\n\t        curNum = year - year % curDiv;\n\t        year = year % curDiv;\n\t        curDiv = curDiv / 10;\n\t    }\n\t    curChar = getHebABC(curNum);\n\t    hebYr = hebYr + '\"' + setLastChar(curChar);\n\t    return hebYr;\n\t};\n\t\n\tvar en_holidays = function en_holidays(cday, cmonth, cyear) {\n\t    // American civil holidays and some major religious holiday\n\t    if (cmonth == 1 && cday == 1) return \"New Year's Day\";else if (cmonth == 2 && cday == 12) return \"Lincoln's Birthday\";else if (cmonth == 2 && cday == 14) return \"Valentine's Day\";else if (cmonth == 2 && cday == NthDOW(3, 2, 2, cyear)) return \"President's Day\";else if (cmonth == 3 && cday == 17) return \"St. Patrick's Day\";else if (cmonth == 3 || cmonth == 4) {\n\t        var e = Easter(cyear);\n\t        if (cmonth == e[1] && cday == e[2]) return \"Easter\";\n\t    } else if (cmonth == 5 && cday == NthDOW(2, 1, 5, cyear)) return \"Mother's Day\";else if (cmonth == 5 && cday == NthDOW(3, 7, 5, cyear)) return \"Armed Forces Day\";else if (cmonth == 5 && cday == NthDOW(0, 2, 5, cyear)) return \"Memorial Day\";else if (cmonth == 6 && cday == 14) return \"Flag Day\";else if (cmonth == 6 && cday == NthDOW(3, 1, 6, cyear)) return \"Father's Day\";else if (cmonth == 7 && cday == 4) return \"Independence Day\";else if (cmonth == 9 && cday == NthDOW(1, 2, 9, cyear)) return \"Labor Day\";else if (cmonth == 10 && cday == NthDOW(2, 2, 10, cyear)) return \"Columbus Day\";else if (cmonth == 10 && cday == 31) return \"Halloween\";else if (cmonth == 11 && cday == 11) return \"Veterans' Day\";else if (cmonth == 11 && cday == NthDOW(4, 5, 11, cyear)) return \"Thanksgiving\";else if (cmonth == 12 && cday == 25) return \"Christmas\";\n\t\n\t    return \"\";\n\t};\n\t\n\tvar en_moadim = function en_moadim(cday, cmonth, cyear, hday, hmonth, dow) {\n\t    var hd;\n\t\n\t    if (hmonth == 6) {\n\t        if (hday == 1 || hday == 2) return \"Rosh Hashana\";else if (hday == 3 && dow != 7) return \"Fast of Gedalia\";else if (hday == 4 && dow == 1) return \"Fast of Gedalia\";else if (hday == 10) return \"Yom Kippur\";else if (hday >= 15 && hday <= 22) return \"Sukkot\";else if (hday == 23) return \"Sukkot (d)\";\n\t    } else if (hmonth == 8) {\n\t        if (hday >= 25) return \"Chanukkah\";\n\t    } else if (hmonth == 9) {\n\t        if (hday <= 2) {\n\t            return \"Chanukkah\";\n\t        } else if (hday == 3) {\n\t            // Kislev can be malei or chaser\n\t            if (cday == 1) {\n\t                cday = 29;\n\t                cmonth = 11;\n\t            } else if (cday == 2) {\n\t                cday = 30;\n\t                cmonth = 11;\n\t            } else cday -= 3;\n\t            var hdate = civ2heb(cday, cmonth, cyear);\n\t            hd = eval(hdate.substring(0, hdate.indexOf(' ')));\n\t            if (hd == 29) return \"Chanukkah\";\n\t        } else if (hday == 10) return \"Fast of Tevet\";\n\t    } else if (hmonth == 10) {\n\t        if (hday == 15) return \"Tu b'Shvat\";\n\t    } else if (hmonth == 11 || hmonth == 13) {\n\t        if (hday == 11 && dow == 5) return \"Taanit Esther\";else if (hday == 13 && dow != 7) return \"Taanit Esther\";else if (hday == 14) return \"Purim\";else if (hday == 15) return \"Shushan Purim\";\n\t    } else if (hmonth == 0) {\n\t\n\t        if (hday == 12 && dow == 5) return \"Taanit Bechorot\";else if (hday == 14 && dow != 7) return \"Taanit Bechorot\";else if (hday >= 15 && hday <= 21) return \"Pesach\";else if (hday == 22) return \"Pesach (d)\";\n\t    } else if (hmonth == 1) {\n\t        if (hday == 3 && dow == 5) return \"Yom Ha'Atzmaut\";else if (hday == 4 && dow == 5) return \"Yom Ha'Atzmaut\";else if (hday == 5 && dow != 6 && dow != 7) return \"Yom Ha'Atzmaut\";\n\t        if (hday == 14) return \"Pesah sheni\";else if (hday == 18) return \"Lag B'Omer\";\n\t        if (hday == 28) return \"Yom Yerushalayim\";\n\t    } else if (hmonth == 2) {\n\t        if (hday == 6) return \"Shavuot\";else if (hday == 7) return \"Shavuot (d)\";\n\t    } else if (hmonth == 3) {\n\t        if (hday == 17 && dow != 7) return \"Fast of Tammuz\";\n\t        if (hday == 18 && dow == 1) return \"Fast of Tammuz\";\n\t    } else if (hmonth == 4) {\n\t        if (hday == 9 && dow != 7) return \"Tisha B'Av\";\n\t        if (hday == 10 && dow == 1) return \"Tisha B'Av\";\n\t        if (hday == 15) return \"Tu B'Av\";\n\t    }\n\t\n\t    return \"\";\n\t};\n\t\n\tvar he_holidays = function he_holidays(cday, cmonth, cyear) {\n\t    // American civil holidays and some major religious holiday\n\t    if (cmonth == 1 && cday == 1) return \"×¨××© ×”×©× ×” ×”××–×¨×—×™×ª\";else if (cmonth == 2 && cday == 12) return \"×”×•×œ×“×ª ×œ×™× ×§×•×œ×Ÿ\";else if (cmonth == 2 && cday == 14) return \"×—×’ ×”××”×‘×”\";else if (cmonth == 2 && cday == NthDOW(3, 2, 2, cyear)) return \"×™×•× ×”× ×©×™×\";else if (cmonth == 3 && cday == 17) return \"×™×•× ×¡×˜. ×¤×˜×¨×™×§\";else if (cmonth == 3 || cmonth == 4) {\n\t        var e = Easter(cyear);\n\t        if (cmonth == e[1] && cday == e[2]) return \"×—×’ ×”×¤×¡×—×\";\n\t    } else if (cmonth == 5 && cday == NthDOW(2, 1, 5, cyear)) return \"×™×•× ×”××\";else if (cmonth == 5 && cday == NthDOW(3, 7, 5, cyear)) return \"Armed Forces Day\";else if (cmonth == 5 && cday == NthDOW(0, 2, 5, cyear)) return \"×™×•× ×”×–×›×¨×•×Ÿ (××¨×”\\\"×‘)\";else if (cmonth == 6 && cday == 14) return \"×™×•× ×”×“×’×œ\";else if (cmonth == 6 && cday == NthDOW(3, 1, 6, cyear)) return \"×™×•× ×”××‘ ×•×”×ž×©×¤×—×”\";else if (cmonth == 7 && cday == 4) return \"×™×•× ×”×¢×¦×ž××•×ª (××¨×”\\\"×‘)\";else if (cmonth == 9 && cday == NthDOW(1, 2, 9, cyear)) return \"×—×’ ×”×¢×‘×•×“×”\";else if (cmonth == 10 && cday == NthDOW(2, 2, 10, cyear)) return \"×™×•× ×§×•×œ×•×ž×‘×•×¡\";else if (cmonth == 10 && cday == 31) return \"×™×•× ×§×•×œ×•×ž×‘×•×¡\";else if (cmonth == 11 && cday == 11) return \"Veterans' Day\";else if (cmonth == 11 && cday == NthDOW(4, 5, 11, cyear)) return \"×—×’ ×”×”×•×“×™×”\";else if (cmonth == 12 && cday == 25) return \"×—×’ ×”×ž×•×œ×“\";\n\t\n\t    return \"\";\n\t};\n\t\n\tvar he_moadim = function he_moadim(cday, cmonth, cyear, hday, hmonth, dow) {\n\t    var hd;\n\t\n\t    if (hmonth == 6) {\n\t        if (hday == 1 || hday == 2) return \"×¨××© ×”×©× ×”\";else if (hday == 3 && dow != 7) return \"×¦×•× ×’×“×œ×™×”\";else if (hday == 4 && dow == 1) return \"×¦×•× ×’×“×œ×™×”\";else if (hday == 10) return \"×™×•× ×›×™×¤×•×¨\";else if (hday >= 15 && hday <= 22) return \"×¡×•×›×•×ª\";else if (hday == 23) return \"×¡×•×›×•×ª (×’)\";\n\t    } else if (hmonth == 8) {\n\t        if (hday >= 25) return \"×—× ×•×›×”\";\n\t    } else if (hmonth == 9) {\n\t        if (hday <= 2) {\n\t            return \"×—× ×•×›×”\";\n\t        } else if (hday == 3) {\n\t            // Kislev can be malei or chaser\n\t            if (cday == 1) {\n\t                cday = 29;\n\t                cmonth = 11;\n\t            } else if (cday == 2) {\n\t                cday = 30;\n\t                cmonth = 11;\n\t            } else cday -= 3;\n\t            var hdate = civ2heb(cday, cmonth, cyear);\n\t            hd = eval(hdate.substring(0, hdate.indexOf(' ')));\n\t            if (hd == 29) return \"×—× ×•×›×”\";\n\t        } else if (hday == 10) return \"×¦×•× ×¢×©×¨×” ×‘×˜×‘×ª\";\n\t    } else if (hmonth == 10) {\n\t        if (hday == 15) return \"×˜\\\"×• ×‘×©×‘×˜\";\n\t    } else if (hmonth == 11 || hmonth == 13) {\n\t        if (hday == 11 && dow == 5) return \"×ª×¢× ×™×ª ××¡×ª×¨\";else if (hday == 13 && dow != 7) return \"×ª×¢× ×™×ª ××¡×ª×¨\";else if (hday == 14) return \"×¤×•×¨×™×\";else if (hday == 15) return \"×©×•×©×Ÿ ×¤×•×¨×™×\";\n\t    } else if (hmonth == 0) {\n\t        if (hday == 12 && dow == 5) return \"×ª×¢× ×™×ª ×‘×›×•×¨×•×ª\";else if (hday == 14 && dow != 7) return \"×ª×¢× ×™×ª ×‘×›×•×¨×•×ª\";else if (hday >= 15 && hday <= 21) return \"×¤×¡×—\";else if (hday == 22) return \"×¤×¡×— (×’)\";\n\t    } else if (hmonth == 1) {\n\t        if (hday == 3 && dow == 5) return \"×™×•× ×”×¢×¦×ž××•×ª\";else if (hday == 4 && dow == 5) return \"×™×•× ×”×¢×¦×ž××•×ª\";else if (hday == 5 && dow != 6 && dow != 7) return \"×™×•× ×”×¢×¦×ž××•×ª\";\n\t        if (hday == 14) return \"×¤×¡×— ×©× ×™\";else if (hday == 18) return \"×œ\\\"×’ ×‘×¢×•×ž×¨\";\n\t        if (hday == 28) return \"×™×•× ×™×¨×•×©×œ×™×\";\n\t    } else if (hmonth == 2) {\n\t        if (hday == 6) return \"×©×‘×•×¢×•×ª\";else if (hday == 7) return \"×©×‘×•×¢×•×ª (×’)\";\n\t    } else if (hmonth == 3) {\n\t        if (hday == 17 && dow != 7) return \"×¦×•× ×™\\\"×– ×‘×ª×ž×•×–\";\n\t        if (hday == 18 && dow == 1) return \"×¦×•× ×™\\\"×– ×‘×ª×ž×•×–\";\n\t    } else if (hmonth == 4) {\n\t        if (hday == 9 && dow != 7) return \"×ª×©×¢×” ×‘××‘\";\n\t        if (hday == 10 && dow == 1) return \"×ª×©×¢×” ×‘××‘\";\n\t        if (hday == 15) return \"×˜\\\"×• ×‘××‘\";\n\t    }\n\t    return \"\";\n\t};\n\t\n\tvar multiLang = {\n\t    en: {\n\t        hebMonth: ['Nisan', 'Iyyar', 'Sivan', 'Tammuz', 'Av', 'Elul', 'Tishrei', 'Cheshvan', 'Kislev', 'Tevet', 'Shevat', 'Adar', 'Adar I', 'Adar II'],\n\t        hHebDay: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30'],\n\t        civMonth: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n\t        weekDay: ['Sun', 'Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Shabbat'],\n\t        hHebYear: en_hHebYear,\n\t        holidays: en_holidays,\n\t        moadim: en_moadim\n\t    },\n\t    he: {\n\t        hebMonth: ['Nisan', 'Iyyar', 'Sivan', 'Tammuz', 'Av', 'Elul', 'Tishrei', 'Cheshvan', 'Kislev', 'Tevet', 'Shevat', 'Adar', 'Adar I', 'Adar II'],\n\t        hHebDay: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30'],\n\t        civMonth: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n\t        weekDay: ['Sun', 'Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Shabbat'],\n\t        hHebYear: he_hHebYear,\n\t        holidays: he_holidays,\n\t        moadim: he_moadim\n\t    }\n\t};\n\t\n\tfunction Gauss(year) {\n\t    var a, b, c, m, Mar; // Mar => \"day in March\" on which Pesach falls (return value)\n\t\n\t    a = Math.floor((12 * year + 17) % 19);\n\t    b = Math.floor(year % 4);\n\t    m = 32.044093161144 + 1.5542417966212 * a + b / 4.0 - 0.0031777940220923 * year;\n\t    if (m < 0) {\n\t        m -= 1;\n\t    }\n\t    Mar = Math.floor(m);\n\t    if (m < 0) {\n\t        m++;\n\t    }\n\t    m -= Mar;\n\t    c = Math.floor((Mar + 3 * year + 5 * b + 5) % 7);\n\t    if (c == 0 && a > 11 && m >= 0.89772376543210) {\n\t        Mar++;\n\t    } else if (c == 1 && a > 6 && m >= 0.63287037037037) {\n\t        Mar += 2;\n\t    } else if (c == 2 || c == 4 || c == 6) {\n\t        Mar++;\n\t    }\n\t    Mar += Math.floor((year - 3760) / 100) - Math.floor((year - 3760) / 400) - 2;\n\t    return Mar;\n\t}\n\t\n\tfunction leap(y) {\n\t    return y % 400 == 0 || y % 100 != 0 && y % 4 == 0;\n\t}\n\t\n\tfunction civMonthLength(month, year) {\n\t    if (month == 2) {\n\t        return 28 + (leap(year) ? 1 : 0);\n\t    }\n\t    if (month == 4 || month == 6 || month == 9 || month == 11) {\n\t        return 30;\n\t    }\n\t    return 31;\n\t}\n\t\n\tfunction civ2heb(day, month, year) {\n\t    var d = day,\n\t        m = month,\n\t        y = year,\n\t        hy,\n\t        pesach,\n\t        anchor,\n\t        adarType;\n\t\n\t    m -= 2;\n\t    if (m <= 0) {\n\t        // Jan or Feb\n\t        m += 12;\n\t        y -= 1;\n\t    }\n\t\n\t    d += Math.floor(7 * m / 12 + 30 * (m - 1)); // day in March\n\t    hy = y + 3760; // get Hebrew year\n\t    pesach = Gauss(hy);\n\t    if (d <= pesach - 15) {\n\t        // before 1 Nisan\n\t        anchor = pesach;\n\t        d += 365;\n\t        if (leap(y)) {\n\t            d++;\n\t        }\n\t        y -= 1;\n\t        hy -= 1;\n\t        pesach = Gauss(hy);\n\t    } else {\n\t        anchor = Gauss(hy + 1);\n\t    }\n\t    d -= pesach - 15;\n\t    anchor -= pesach - 12;\n\t    y++;\n\t    if (leap(y)) {\n\t        anchor++;\n\t    }\n\t    for (m = 0; m < 11; m++) {\n\t        var days;\n\t        if (m == 7 && anchor % 30 == 2) days = 30; // Cheshvan\n\t        else if (m == 8 && anchor % 30 == 0) days = 29; // Kislev\n\t            else days = 30 - m % 2;\n\t        if (d <= days) break;\n\t        d -= days;\n\t    }\n\t\n\t    adarType = 0; // plain old Adar\n\t    if (m == 11 && anchor >= 30) {\n\t        if (d > 30) {\n\t            adarType = 2; // Adar 2\n\t            d -= 30;\n\t        } else {\n\t            adarType = 1; // Adar 1\n\t        }\n\t    }\n\t    if (m >= 6) {\n\t        // Tishrei or after?\n\t        hy++; // then bump up year\n\t    }\n\t    if (m == 11) {\n\t        // Adar?\n\t        m += adarType; // adjust for Adars\n\t    }\n\t\n\t    return d + ' ' + m + ' ' + hy;\n\t}\n\t\n\tfunction Easter(Y) {\n\t    // based on the algorithm of Oudin\n\t    var C = Math.floor(Y / 100),\n\t        N = Y - 19 * Math.floor(Y / 19),\n\t        K = Math.floor((C - 17) / 25),\n\t        I = C - Math.floor(C / 4) - Math.floor((C - K) / 3) + 19 * N + 15;\n\t    I = I - 30 * Math.floor(I / 30);\n\t    I = I - Math.floor(I / 28) * (1 - Math.floor(I / 28) * Math.floor(29 / (I + 1)) * Math.floor((21 - N) / 11));\n\t    var J = Y + Math.floor(Y / 4) + I + 2 - C + Math.floor(C / 4);\n\t    J = J - 7 * Math.floor(J / 7);\n\t    var L = I - J,\n\t        M = 3 + Math.floor((L + 40) / 44),\n\t        D = L + 28 - 31 * Math.floor(M / 4),\n\t        ret = new Object();\n\t\n\t    ret[1] = M;\n\t    ret[2] = D;\n\t\n\t    return ret;\n\t}\n\t\n\tfunction DOW(day, month, year) {\n\t    var a = Math.floor((14 - month) / 12),\n\t        y = year - a,\n\t        m = month + 12 * a - 2,\n\t        d = (day + y + Math.floor(y / 4) - Math.floor(y / 100) + Math.floor(y / 400) + Math.floor(31 * m / 12)) % 7;\n\t\n\t    return d + 1;\n\t}\n\t\n\tfunction NthDOW(nth, weekday, month, year) {\n\t    if (nth > 0) {\n\t        return (nth - 1) * 7 + 1 + (7 + weekday - DOW((nth - 1) * 7 + 1, month, year)) % 7;\n\t    }\n\t    var days = civMonthLength(month, year);\n\t\n\t    return days - (DOW(days, month, year) - weekday + 7) % 7;\n\t}\n\t\n\tfunction getHebDate(day, month, year) {\n\t    return civ2heb(day, month, year);\n\t}\n\t\n\t/* KaluachJS - Kaluach Javascript Hebrew/civil calendar\n\t *   Version 1.00\n\t * Copyright (C) 5760,5761 (2000 CE), by Abu Mami and Yisrael Hersch.\n\t *   All Rights Reserved.\n\t *   All copyright notices in this script must be left intact.\n\t * Requires kdate.js - Kaluach Javascript Hebrew date routines\n\t * Acknowledgment given to scripts by:\n\t *\t - Tomer and Yehuda Shiran (docjs.com)\n\t *   - Gordon McComb\n\t *   - irt.org\n\t *   - javascripter.net\n\t * Terms of use:\n\t *   - Permission will be granted to use this script on personal\n\t *     web pages. All that's required is that you please ask.\n\t *     (Of course if you want to send a few dollars, that's OK too :-)\n\t *   - Use on commercial web sites requires a $50 payment.\n\t * website: http://www.kaluach.net\n\t * email: abumami@kaluach.net\n\t */\n\t\n\tvar jewishHolidays = 1;\n\tvar civilHolidays = 0;\n\t\n\tfunction doCal(month, year) {\n\t    var ret = calendar(month, year);\n\t\n\t    console.log(ret); // eslint-disable-line no-console\n\t\n\t    var result = BuildLuachHTML(ret);\n\t    document.getElementById(\"calBld\").innerHTML = result;\n\t}\n\t\n\tfunction calendar(selM, selY) {\n\t    var m = selM + 1;\n\t    var y = selY;\n\t    var d = civMonthLength(m, y);\n\t    var firstOfMonth = new Date(y, selM, 1);\n\t    var startPos = firstOfMonth.getDay() + 1;\n\t    var retVal = new Object();\n\t    retVal[1] = startPos;\n\t    retVal[2] = d;\n\t    retVal[3] = m;\n\t    retVal[4] = y;\n\t    return retVal;\n\t}\n\t\n\tfunction BuildLuachHTML(parms) {\n\t    var hebColor = \"darkblue\"; // color of font representing Heb date\n\t    var civColor = \"darkred\"; // color of font representing Civ date\n\t    var hebDate;\n\t    var hebDay;\n\t    var now = new Date();\n\t    var tday = now.getDate();\n\t    var tmonth = now.getMonth();\n\t    var tyear = now.getYear();\n\t    if (tyear < 1000) tyear += 1900;\n\t    var cMonth = parms[3];\n\t    var cYear = parms[4];\n\t    var monthName = multiLang[currLang].civMonth[cMonth];\n\t    var lastDate = civMonthLength(cMonth, cYear);\n\t    var hm;\n\t    var hMonth;\n\t    var hYear;\n\t    var hmS;\n\t    var hmE;\n\t\n\t    // get starting Heb month in civil month\n\t    hebDate = civ2heb(1, cMonth, cYear);\n\t    hmS = hebDate.substring(hebDate.indexOf(' ') + 1, hebDate.length);\n\t    hMonth = eval(hmS.substring(0, hmS.indexOf(' ')));\n\t    hYear = hmS.substring(hmS.indexOf(' ') + 1, hmS.length);\n\t    var start = multiLang[currLang].hebMonth[hMonth + 1] + ' ' + multiLang[currLang].hHebYear(hYear);\n\t\n\t    // get ending Heb month in civil month\n\t    hebDate = civ2heb(lastDate, cMonth, cYear);\n\t    hmE = hebDate.substring(hebDate.indexOf(' ') + 1, hebDate.length);\n\t    hMonth = eval(hmE.substring(0, hmE.indexOf(' ')));\n\t    hYear = hmE.substring(hmE.indexOf(' ') + 1, hmE.length);\n\t    var end = multiLang[currLang].hebMonth[hMonth + 1] + ' ' + multiLang[currLang].hHebYear(hYear);\n\t\n\t    var hebSpan;\n\t    // check if start and end Heb months are the same\n\t    if (hmS == hmE) hebSpan = start;else hebSpan = start + ' / ' + end;\n\t\n\t    var result = '<center>';\n\t\n\t    var col;\n\t\n\t    // set up our table structure\n\t    result += '<table border=\"0\" cellpadding=\"0\" cellspacing=\"1\" style=\"border-collapse:separate;width:100%;\">'; // table settings\n\t    result += '<tr>'; // create table header cell\n\t    result += '<td colspan=\"7\" style=\"background-color:#edfaff;color:#010101;font-size:18px;height:30px;line-height:28px;text-align:center;\">'; // create table header cell\n\t    result += '<span class=\"calGdate\">'; // set font for table header\n\t    result += monthName + ' ' + cYear;\n\t    result += '</span>'; // close table header's font settings\n\t    result += '<span class=\"calJdate\">'; // set font for table header\n\t    result += '&nbsp&nbsp ' + hebSpan;\n\t    result += '</span>'; // close table header's font settings\n\t    result += '</td>'; // close header cell\n\t    result += '</tr>'; // create table header cell\n\t\n\t    // variables to hold constant settings\n\t    var openCol = '<td style=\"height:58px;line-height:54px;text-align:center;\"><span style=\"font-weight:normal;font-size:18px;color:#000000;\">';\n\t    var closeCol = '</span></td>';\n\t\n\t    // create first row of table to set column width and specify week day\n\t    result += '<tr style=\"background-color:#ffffff;\">';\n\t    for (var dayNum = 1; dayNum < 8; ++dayNum) {\n\t        result += openCol + multiLang[currLang].weekDay[dayNum] + closeCol;\n\t    }\n\t    result += '</tr>';\n\t\n\t    // console.log(multiLang); // eslint-disable-line no-console\n\t\n\t    var cell = 1;\n\t    var cDay = 1;\n\t    var row;\n\t    for (row = 1; row <= 6; row++) {\n\t        result += '<tr valign=\"top\">';\n\t        for (col = 1; col <= 7; col++) {\n\t\n\t            // convert civil date to hebrew\n\t            hebDate = civ2heb(cDay, cMonth, cYear);\n\t            hebDay = eval(hebDate.substring(0, hebDate.indexOf(' ')));\n\t\n\t            // console.log(cDay); // eslint-disable-line no-console\n\t            // console.log(cMonth); // eslint-disable-line no-console\n\t            // console.log(cYear); // eslint-disable-line no-console\n\t            // console.log(hebDate); // eslint-disable-line no-console\n\t\n\t            hm = hebDate.substring(hebDate.indexOf(' ') + 1, hebDate.length);\n\t            hMonth = eval(hm.substring(0, hm.indexOf(' ')));\n\t\n\t            if (cell < parms[1]) result += '<td bgColor=\"#ededed\"></td>';else {\n\t\n\t                var moed = \"\";\n\t                if (jewishHolidays) moed = multiLang[currLang].moadim(cDay, cMonth, cYear, hebDay, hMonth, col);\n\t                var holiday = \"\";\n\t                if (civilHolidays) holiday = multiLang[currLang].holidays(cDay, cMonth, cYear);\n\t\n\t                var bg;\n\t                if (cDay == tday && parms[3] == tmonth + 1 && parms[4] == tyear)\n\t                    // highight the current day\n\t                    bg = 'bgColor=#9DEEAB';else if (moed != \"\")\n\t                    // highlight Heb holiday\n\t                    bg = 'bgColor=#5cd3fe';else if (holiday != \"\") {\n\t                    // highlight civil holiday\n\t                    bg = 'bgColor=#F3AEE7';\n\t                    //\t\t\t\t\tmoed = holiday;\n\t                } else\n\t                    // no highlight\n\t                    bg = 'bgColor=#d9f4fd';\n\t\n\t                // assemble the contents of our day cell\n\t                result += '<TD ' + bg + ' style=\"height:60px;text-align:center;padding:10px 12px;\">';\n\t                result += '<table BORDER=0 COLS=2 style=\"height:16px;width:84px;\">';\n\t                result += '<tr>';\n\t                result += '<td>';\n\t                result += '<span style=\"font-family: Arial; color: ' + civColor + '>';\n\t                result += cDay;\n\t                result += '</span>';\n\t                result += '</td>';\n\t                result += '<td>';\n\t                result += '<span style=\"font-family: Arial; color: ' + hebColor + '>';\n\t                result += '<div align=right>' + multiLang[currLang].hHebDay[hebDay] + '</div>';\n\t                result += '</span>';\n\t                result += '</td>';\n\t                result += '</tr>';\n\t                result += '</table>';\n\t                result += '<FONT face=\"Arial\" size=-2>';\n\t                if (moed != \"\") result += moed;\n\t                if (moed != \"\" && holiday != \"\") result += '<br>';\n\t                if (holiday != \"\") result += holiday;\n\t                result += '</FONT>';\n\t                result += '</TD>';\n\t\n\t                cDay++;\n\t            }\n\t\n\t            if (cDay <= lastDate) cell++;else {\n\t                while (cell % 7 != 0) {\n\t                    result += '<td bgColor=\"#ededed\"></td>';\n\t                    cell++;\n\t                }\n\t                break;\n\t            }\n\t        }\n\t\n\t        result += '</TR>';\n\t        if (cDay > parms[2]) break;\n\t    }\n\t\n\t    result += '</table>';\n\t    result += '<div style=\"padding:10px 4px;\">Copyright &copy; 5760,5761 (2000 CE), Abu Mami and Yisrael Hersch. All rights reserved.<br>';\n\t    result += 'email: <a href=\"mailto:abumami@kaluach.net\"> abumami@kaluach.net</a> &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp web site: <a href=\"http://www.kaluach.net\">http://www.kaluach.net</a></div>';\n\t    result += '</center>';\n\t    return result;\n\t}\n\t\n\tdoCal(8, 2017);\n\t\n\t/*\n\t\n\n\n\tif (Drupal.jsEnabled) {\n\t    $(document).ready(\n\t        function(){\n\t            init_vars();\n\t            $('#zmanim-loc-show').click(function() {\n\t                set_and_show_all_times();\n\t            });\n\t            $('#daily-date-show').click(function() {\n\t                set_and_show_daily_times(false);\n\t            });\n\t            $('#shabbat-date-show').click(function() {\n\t                set_and_show_shabbat_times(false);\n\t            });\n\t        }\n\t    )\n\t}\n\n\tfunction get_times(ploc,pdate,s_type) {\n\t    if ((ploc != curr_loc) || (pdate != curr_date) || (s_type != curr_type)) {\n\t        curr_loc = ploc;\n\t        curr_date = pdate;\n\t        curr_type = s_type;\n\t        $.post(\"/general/ajax/get_times\", {loc: ploc, date: pdate},   function(data) {\n\t            if (((s_type == 1) || (s_type == 3)) && (pdate == $('#edit-daily-date-datepicker-popup-0').val())) {\n\t                if (data.dst) {\n\t                    $(\"#zmanim-daily-dst\").removeClass(\"zmanim-dst-off\").addClass(\"zmanim-dst-on\");\n\t                } else {\n\t                    $(\"#zmanim-daily-dst\").removeClass(\"zmanim-dst-on\").addClass(\"zmanim-dst-off\");\n\t                }\n\t                $(\"#zmanim-daily-alot\").html(data.alot);\n\t                $(\"#zmanim-daily-hanetz\").html(data.sunrise);\n\t                $(\"#zmanim-daily-shema\").html(data.shema);\n\t                $(\"#zmanim-daily-tefilla\").html(data.tefillah);\n\t                $(\"#zmanim-daily-chatzot\").html(data.chatzot);\n\t                $(\"#zmanim-daily-minchag\").html(data.minchag);\n\t                $(\"#zmanim-daily-minchak\").html(data.minchak);\n\t                $(\"#zmanim-daily-plag\").html(data.plag);\n\t                $(\"#zmanim-daily-sunset\").html(data.sunset);\n\t                $(\"#zmanim-daily-tzet\").html(data.tzet);\n\t            }\n\t            if (((s_type == 2) || (s_type == 3)) && (pdate == $('#edit-shabbat-date-datepicker-popup-0').val())) {\n\t                if (data.dst) {\n\t                    $(\"#zmanim-shabbat-dst\").removeClass(\"zmanim-dst-off\").addClass(\"zmanim-dst-on\");\n\t                } else {\n\t                    $(\"#zmanim-shabbat-dst\").removeClass(\"zmanim-dst-on\").addClass(\"zmanim-dst-off\");\n\t                }\n\t                if (data.omer) {\n\t                    if (data.chag) {\n\t                        z_omer = \", \"+data.omer;\n\t                    } else {\n\t                        z_omer = \"<br />\"+data.omer;\n\t                    }\n\t                } else {\n\t                    z_omer = \"\";\n\t                }\n\t                if (data.chag) {\n\t                    z_chag = \"<br />\"+data.chag;\n\t                } else {\n\t                    z_chag = \"\";\n\t                }\n\t                $(\"#zmanim-shabbat-date\").html(data.hebrew + \", \" + data.formated_gregorian);\n\t                $(\"#zmanim-shabbat-extra\").html(data.parasha + z_chag + z_omer);\n\t                $(\"#zmanim-shabbat-knissat\").html(data.knissat_shabbat);\n\t                $(\"#zmanim-shabbat-motzei\").html(data.motsei_shabbat);\n\t                $(\"#zmanim-shabbat-rabtam\").html(data.motsash_rab_tam);\n\t            }\n\t        }, \"json\");\n\t    }\n\t}\n\n\tfunction init_vars() {\n\t    curr_loc = \"\";\n\t    curr_date = \"\";\n\t    curr_type = \"\";\n\t    set_and_show_all_times();\n\t}\n\n\tfunction set_and_show_all_times() {\n\t    set_and_show_daily_times(true);\n\t    set_and_show_shabbat_times(true);\n\t}\n\n\tfunction set_and_show_daily_times(s_both) {\n\t    get_times($('#edit-city').val(),$('#edit-daily-date-datepicker-popup-0').val(),s_both?3:1);\n\t}\n\n\tfunction set_and_show_shabbat_times(s_both) {\n\t    get_times($('#edit-city').val(),$('#edit-shabbat-date-datepicker-popup-0').val(),s_both?3:2);\n\t}\n\n\n\n\n\t*/\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** main.0a91e838efa1b093244e.js\n **/","import './index.scss';\n\nimport {getUsers, deleteUser} from './api/userApi';\n\nimport numeral from 'numeral';\n\nimport {getHebDate} from './zmanim';\n\nconst curHebDate = getHebDate(10, 9, 2017);\n\nconst courseValue = numeral(1000).format('$0,0.00');\nconsole.log(`I would pay ${courseValue} for this awesome course!`);    // eslint-disable-line no-console\n\nconsole.log(`Today Hebrew date is: ${curHebDate} !`);    // eslint-disable-line no-console\n\n\n// Populate table of users via API call\ngetUsers().then(result => {\n    let usersBody = \"\";\n\n    result.forEach(user => {\n        usersBody += `<tr>\n<td><a href=\"#\" data-id=\"${user.id}\" class=\"deleteUser\">Delete</a></td>\n<td>${user.id}</td>\n<td>${user.firstName}</td>\n<td>${user.lastName}</td>\n<td>${user.email}</td>\n</tr>`;\n    });\n\n    global.document.getElementById('users').innerHTML = usersBody;\n\n    const deleteLinks = global.document.getElementsByClassName('deleteUser');\n\n    Array.from(deleteLinks, link => {\n        link.onclick = function (event) {\n            const element = event.target;\n            event.preventDefault();\n            deleteUser(element.attributes[\"data-id\"].value);\n            const row = element.parentNode.parentNode;\n            row.parentNode.removeChild(row);\n        };\n    });\n});\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import 'whatwg-fetch';\nimport getBaseUrl from './baseUrl';\n\nconst baseUrl = getBaseUrl();\n\nexport function getUsers() {\n    return get('users');\n}\n\nexport function deleteUser(id) {\n    return del(`users/${id}`);\n}\n\nfunction get(url) {\n    return fetch(baseUrl + url).then(onSuccess, onError);\n}\n\n// Can't call func delete since reserved word.\nfunction del(url) {\n    const request = new Request(baseUrl + url, {\n        method: 'DELETE'\n    });\n\n    return fetch(request).then(onSuccess, onError);\n}\n\nfunction onSuccess (response) {\n    return response.json();\n}\n\nfunction onError (error) {\n    console.log(error); // eslint-disable-line no-console\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/api/userApi.js\n **/","export default function getBaseUrl() {\n  return getQueryStringParameterByName('useMockApi') ? 'http://localhost:3001/' : '/';\n}\n\n\n\nfunction getQueryStringParameterByName(name, url) {\n  if (!url) {\n    url = window.location.href;\n  }\n  name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n          results = regex.exec(url);\n  if (!results) {\n    return null;\n  }\n  if (!results[2]) {\n    return '';\n  }\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/api/baseUrl.js\n **/","/*!\n * numeral.js\n * version : 1.5.3\n * author : Adam Draper\n * license : MIT\n * http://adamwdraper.github.com/Numeral-js/\n */\n\n(function () {\n\n    /************************************\n        Constants\n    ************************************/\n\n    var numeral,\n        VERSION = '1.5.3',\n        // internal storage for language config files\n        languages = {},\n        currentLanguage = 'en',\n        zeroFormat = null,\n        defaultFormat = '0,0',\n        // check for nodeJS\n        hasModule = (typeof module !== 'undefined' && module.exports);\n\n\n    /************************************\n        Constructors\n    ************************************/\n\n\n    // Numeral prototype object\n    function Numeral (number) {\n        this._value = number;\n    }\n\n    /**\n     * Implementation of toFixed() that treats floats more like decimals\n     *\n     * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present\n     * problems for accounting- and finance-related software.\n     */\n    function toFixed (value, precision, roundingFunction, optionals) {\n        var power = Math.pow(10, precision),\n            optionalsRegExp,\n            output;\n            \n        //roundingFunction = (roundingFunction !== undefined ? roundingFunction : Math.round);\n        // Multiply up by precision, round accurately, then divide and use native toFixed():\n        output = (roundingFunction(value * power) / power).toFixed(precision);\n\n        if (optionals) {\n            optionalsRegExp = new RegExp('0{1,' + optionals + '}$');\n            output = output.replace(optionalsRegExp, '');\n        }\n\n        return output;\n    }\n\n    /************************************\n        Formatting\n    ************************************/\n\n    // determine what type of formatting we need to do\n    function formatNumeral (n, format, roundingFunction) {\n        var output;\n\n        // figure out what kind of format we are dealing with\n        if (format.indexOf('$') > -1) { // currency!!!!!\n            output = formatCurrency(n, format, roundingFunction);\n        } else if (format.indexOf('%') > -1) { // percentage\n            output = formatPercentage(n, format, roundingFunction);\n        } else if (format.indexOf(':') > -1) { // time\n            output = formatTime(n, format);\n        } else { // plain ol' numbers or bytes\n            output = formatNumber(n._value, format, roundingFunction);\n        }\n\n        // return string\n        return output;\n    }\n\n    // revert to number\n    function unformatNumeral (n, string) {\n        var stringOriginal = string,\n            thousandRegExp,\n            millionRegExp,\n            billionRegExp,\n            trillionRegExp,\n            suffixes = ['KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n            bytesMultiplier = false,\n            power;\n\n        if (string.indexOf(':') > -1) {\n            n._value = unformatTime(string);\n        } else {\n            if (string === zeroFormat) {\n                n._value = 0;\n            } else {\n                if (languages[currentLanguage].delimiters.decimal !== '.') {\n                    string = string.replace(/\\./g,'').replace(languages[currentLanguage].delimiters.decimal, '.');\n                }\n\n                // see if abbreviations are there so that we can multiply to the correct number\n                thousandRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.thousand + '(?:\\\\)|(\\\\' + languages[currentLanguage].currency.symbol + ')?(?:\\\\))?)?$');\n                millionRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.million + '(?:\\\\)|(\\\\' + languages[currentLanguage].currency.symbol + ')?(?:\\\\))?)?$');\n                billionRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.billion + '(?:\\\\)|(\\\\' + languages[currentLanguage].currency.symbol + ')?(?:\\\\))?)?$');\n                trillionRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.trillion + '(?:\\\\)|(\\\\' + languages[currentLanguage].currency.symbol + ')?(?:\\\\))?)?$');\n\n                // see if bytes are there so that we can multiply to the correct number\n                for (power = 0; power <= suffixes.length; power++) {\n                    bytesMultiplier = (string.indexOf(suffixes[power]) > -1) ? Math.pow(1024, power + 1) : false;\n\n                    if (bytesMultiplier) {\n                        break;\n                    }\n                }\n\n                // do some math to create our number\n                n._value = ((bytesMultiplier) ? bytesMultiplier : 1) * ((stringOriginal.match(thousandRegExp)) ? Math.pow(10, 3) : 1) * ((stringOriginal.match(millionRegExp)) ? Math.pow(10, 6) : 1) * ((stringOriginal.match(billionRegExp)) ? Math.pow(10, 9) : 1) * ((stringOriginal.match(trillionRegExp)) ? Math.pow(10, 12) : 1) * ((string.indexOf('%') > -1) ? 0.01 : 1) * (((string.split('-').length + Math.min(string.split('(').length-1, string.split(')').length-1)) % 2)? 1: -1) * Number(string.replace(/[^0-9\\.]+/g, ''));\n\n                // round if we are talking about bytes\n                n._value = (bytesMultiplier) ? Math.ceil(n._value) : n._value;\n            }\n        }\n        return n._value;\n    }\n\n    function formatCurrency (n, format, roundingFunction) {\n        var symbolIndex = format.indexOf('$'),\n            openParenIndex = format.indexOf('('),\n            minusSignIndex = format.indexOf('-'),\n            space = '',\n            spliceIndex,\n            output;\n\n        // check for space before or after currency\n        if (format.indexOf(' $') > -1) {\n            space = ' ';\n            format = format.replace(' $', '');\n        } else if (format.indexOf('$ ') > -1) {\n            space = ' ';\n            format = format.replace('$ ', '');\n        } else {\n            format = format.replace('$', '');\n        }\n\n        // format the number\n        output = formatNumber(n._value, format, roundingFunction);\n\n        // position the symbol\n        if (symbolIndex <= 1) {\n            if (output.indexOf('(') > -1 || output.indexOf('-') > -1) {\n                output = output.split('');\n                spliceIndex = 1;\n                if (symbolIndex < openParenIndex || symbolIndex < minusSignIndex){\n                    // the symbol appears before the \"(\" or \"-\"\n                    spliceIndex = 0;\n                }\n                output.splice(spliceIndex, 0, languages[currentLanguage].currency.symbol + space);\n                output = output.join('');\n            } else {\n                output = languages[currentLanguage].currency.symbol + space + output;\n            }\n        } else {\n            if (output.indexOf(')') > -1) {\n                output = output.split('');\n                output.splice(-1, 0, space + languages[currentLanguage].currency.symbol);\n                output = output.join('');\n            } else {\n                output = output + space + languages[currentLanguage].currency.symbol;\n            }\n        }\n\n        return output;\n    }\n\n    function formatPercentage (n, format, roundingFunction) {\n        var space = '',\n            output,\n            value = n._value * 100;\n\n        // check for space before %\n        if (format.indexOf(' %') > -1) {\n            space = ' ';\n            format = format.replace(' %', '');\n        } else {\n            format = format.replace('%', '');\n        }\n\n        output = formatNumber(value, format, roundingFunction);\n        \n        if (output.indexOf(')') > -1 ) {\n            output = output.split('');\n            output.splice(-1, 0, space + '%');\n            output = output.join('');\n        } else {\n            output = output + space + '%';\n        }\n\n        return output;\n    }\n\n    function formatTime (n) {\n        var hours = Math.floor(n._value/60/60),\n            minutes = Math.floor((n._value - (hours * 60 * 60))/60),\n            seconds = Math.round(n._value - (hours * 60 * 60) - (minutes * 60));\n        return hours + ':' + ((minutes < 10) ? '0' + minutes : minutes) + ':' + ((seconds < 10) ? '0' + seconds : seconds);\n    }\n\n    function unformatTime (string) {\n        var timeArray = string.split(':'),\n            seconds = 0;\n        // turn hours and minutes into seconds and add them all up\n        if (timeArray.length === 3) {\n            // hours\n            seconds = seconds + (Number(timeArray[0]) * 60 * 60);\n            // minutes\n            seconds = seconds + (Number(timeArray[1]) * 60);\n            // seconds\n            seconds = seconds + Number(timeArray[2]);\n        } else if (timeArray.length === 2) {\n            // minutes\n            seconds = seconds + (Number(timeArray[0]) * 60);\n            // seconds\n            seconds = seconds + Number(timeArray[1]);\n        }\n        return Number(seconds);\n    }\n\n    function formatNumber (value, format, roundingFunction) {\n        var negP = false,\n            signed = false,\n            optDec = false,\n            abbr = '',\n            abbrK = false, // force abbreviation to thousands\n            abbrM = false, // force abbreviation to millions\n            abbrB = false, // force abbreviation to billions\n            abbrT = false, // force abbreviation to trillions\n            abbrForce = false, // force abbreviation\n            bytes = '',\n            ord = '',\n            abs = Math.abs(value),\n            suffixes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n            min,\n            max,\n            power,\n            w,\n            precision,\n            thousands,\n            d = '',\n            neg = false;\n\n        // check if number is zero and a custom zero format has been set\n        if (value === 0 && zeroFormat !== null) {\n            return zeroFormat;\n        } else {\n            // see if we should use parentheses for negative number or if we should prefix with a sign\n            // if both are present we default to parentheses\n            if (format.indexOf('(') > -1) {\n                negP = true;\n                format = format.slice(1, -1);\n            } else if (format.indexOf('+') > -1) {\n                signed = true;\n                format = format.replace(/\\+/g, '');\n            }\n\n            // see if abbreviation is wanted\n            if (format.indexOf('a') > -1) {\n                // check if abbreviation is specified\n                abbrK = format.indexOf('aK') >= 0;\n                abbrM = format.indexOf('aM') >= 0;\n                abbrB = format.indexOf('aB') >= 0;\n                abbrT = format.indexOf('aT') >= 0;\n                abbrForce = abbrK || abbrM || abbrB || abbrT;\n\n                // check for space before abbreviation\n                if (format.indexOf(' a') > -1) {\n                    abbr = ' ';\n                    format = format.replace(' a', '');\n                } else {\n                    format = format.replace('a', '');\n                }\n\n                if (abs >= Math.pow(10, 12) && !abbrForce || abbrT) {\n                    // trillion\n                    abbr = abbr + languages[currentLanguage].abbreviations.trillion;\n                    value = value / Math.pow(10, 12);\n                } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9) && !abbrForce || abbrB) {\n                    // billion\n                    abbr = abbr + languages[currentLanguage].abbreviations.billion;\n                    value = value / Math.pow(10, 9);\n                } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6) && !abbrForce || abbrM) {\n                    // million\n                    abbr = abbr + languages[currentLanguage].abbreviations.million;\n                    value = value / Math.pow(10, 6);\n                } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3) && !abbrForce || abbrK) {\n                    // thousand\n                    abbr = abbr + languages[currentLanguage].abbreviations.thousand;\n                    value = value / Math.pow(10, 3);\n                }\n            }\n\n            // see if we are formatting bytes\n            if (format.indexOf('b') > -1) {\n                // check for space before\n                if (format.indexOf(' b') > -1) {\n                    bytes = ' ';\n                    format = format.replace(' b', '');\n                } else {\n                    format = format.replace('b', '');\n                }\n\n                for (power = 0; power <= suffixes.length; power++) {\n                    min = Math.pow(1024, power);\n                    max = Math.pow(1024, power+1);\n\n                    if (value >= min && value < max) {\n                        bytes = bytes + suffixes[power];\n                        if (min > 0) {\n                            value = value / min;\n                        }\n                        break;\n                    }\n                }\n            }\n\n            // see if ordinal is wanted\n            if (format.indexOf('o') > -1) {\n                // check for space before\n                if (format.indexOf(' o') > -1) {\n                    ord = ' ';\n                    format = format.replace(' o', '');\n                } else {\n                    format = format.replace('o', '');\n                }\n\n                ord = ord + languages[currentLanguage].ordinal(value);\n            }\n\n            if (format.indexOf('[.]') > -1) {\n                optDec = true;\n                format = format.replace('[.]', '.');\n            }\n\n            w = value.toString().split('.')[0];\n            precision = format.split('.')[1];\n            thousands = format.indexOf(',');\n\n            if (precision) {\n                if (precision.indexOf('[') > -1) {\n                    precision = precision.replace(']', '');\n                    precision = precision.split('[');\n                    d = toFixed(value, (precision[0].length + precision[1].length), roundingFunction, precision[1].length);\n                } else {\n                    d = toFixed(value, precision.length, roundingFunction);\n                }\n\n                w = d.split('.')[0];\n\n                if (d.split('.')[1].length) {\n                    d = languages[currentLanguage].delimiters.decimal + d.split('.')[1];\n                } else {\n                    d = '';\n                }\n\n                if (optDec && Number(d.slice(1)) === 0) {\n                    d = '';\n                }\n            } else {\n                w = toFixed(value, null, roundingFunction);\n            }\n\n            // format number\n            if (w.indexOf('-') > -1) {\n                w = w.slice(1);\n                neg = true;\n            }\n\n            if (thousands > -1) {\n                w = w.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + languages[currentLanguage].delimiters.thousands);\n            }\n\n            if (format.indexOf('.') === 0) {\n                w = '';\n            }\n\n            return ((negP && neg) ? '(' : '') + ((!negP && neg) ? '-' : '') + ((!neg && signed) ? '+' : '') + w + d + ((ord) ? ord : '') + ((abbr) ? abbr : '') + ((bytes) ? bytes : '') + ((negP && neg) ? ')' : '');\n        }\n    }\n\n    /************************************\n        Top Level Functions\n    ************************************/\n\n    numeral = function (input) {\n        if (numeral.isNumeral(input)) {\n            input = input.value();\n        } else if (input === 0 || typeof input === 'undefined') {\n            input = 0;\n        } else if (!Number(input)) {\n            input = numeral.fn.unformat(input);\n        }\n\n        return new Numeral(Number(input));\n    };\n\n    // version number\n    numeral.version = VERSION;\n\n    // compare numeral object\n    numeral.isNumeral = function (obj) {\n        return obj instanceof Numeral;\n    };\n\n    // This function will load languages and then set the global language.  If\n    // no arguments are passed in, it will simply return the current global\n    // language key.\n    numeral.language = function (key, values) {\n        if (!key) {\n            return currentLanguage;\n        }\n\n        if (key && !values) {\n            if(!languages[key]) {\n                throw new Error('Unknown language : ' + key);\n            }\n            currentLanguage = key;\n        }\n\n        if (values || !languages[key]) {\n            loadLanguage(key, values);\n        }\n\n        return numeral;\n    };\n    \n    // This function provides access to the loaded language data.  If\n    // no arguments are passed in, it will simply return the current\n    // global language object.\n    numeral.languageData = function (key) {\n        if (!key) {\n            return languages[currentLanguage];\n        }\n        \n        if (!languages[key]) {\n            throw new Error('Unknown language : ' + key);\n        }\n        \n        return languages[key];\n    };\n\n    numeral.language('en', {\n        delimiters: {\n            thousands: ',',\n            decimal: '.'\n        },\n        abbreviations: {\n            thousand: 'k',\n            million: 'm',\n            billion: 'b',\n            trillion: 't'\n        },\n        ordinal: function (number) {\n            var b = number % 10;\n            return (~~ (number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n        },\n        currency: {\n            symbol: '$'\n        }\n    });\n\n    numeral.zeroFormat = function (format) {\n        zeroFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.defaultFormat = function (format) {\n        defaultFormat = typeof(format) === 'string' ? format : '0.0';\n    };\n\n    /************************************\n        Helpers\n    ************************************/\n\n    function loadLanguage(key, values) {\n        languages[key] = values;\n    }\n\n    /************************************\n        Floating-point helpers\n    ************************************/\n\n    // The floating-point helper functions and implementation\n    // borrows heavily from sinful.js: http://guipn.github.io/sinful.js/\n\n    /**\n     * Array.prototype.reduce for browsers that don't support it\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce#Compatibility\n     */\n    if ('function' !== typeof Array.prototype.reduce) {\n        Array.prototype.reduce = function (callback, opt_initialValue) {\n            'use strict';\n            \n            if (null === this || 'undefined' === typeof this) {\n                // At the moment all modern browsers, that support strict mode, have\n                // native implementation of Array.prototype.reduce. For instance, IE8\n                // does not support strict mode, so this check is actually useless.\n                throw new TypeError('Array.prototype.reduce called on null or undefined');\n            }\n            \n            if ('function' !== typeof callback) {\n                throw new TypeError(callback + ' is not a function');\n            }\n\n            var index,\n                value,\n                length = this.length >>> 0,\n                isValueSet = false;\n\n            if (1 < arguments.length) {\n                value = opt_initialValue;\n                isValueSet = true;\n            }\n\n            for (index = 0; length > index; ++index) {\n                if (this.hasOwnProperty(index)) {\n                    if (isValueSet) {\n                        value = callback(value, this[index], index, this);\n                    } else {\n                        value = this[index];\n                        isValueSet = true;\n                    }\n                }\n            }\n\n            if (!isValueSet) {\n                throw new TypeError('Reduce of empty array with no initial value');\n            }\n\n            return value;\n        };\n    }\n\n    \n    /**\n     * Computes the multiplier necessary to make x >= 1,\n     * effectively eliminating miscalculations caused by\n     * finite precision.\n     */\n    function multiplier(x) {\n        var parts = x.toString().split('.');\n        if (parts.length < 2) {\n            return 1;\n        }\n        return Math.pow(10, parts[1].length);\n    }\n\n    /**\n     * Given a variable number of arguments, returns the maximum\n     * multiplier that must be used to normalize an operation involving\n     * all of them.\n     */\n    function correctionFactor() {\n        var args = Array.prototype.slice.call(arguments);\n        return args.reduce(function (prev, next) {\n            var mp = multiplier(prev),\n                mn = multiplier(next);\n        return mp > mn ? mp : mn;\n        }, -Infinity);\n    }        \n\n\n    /************************************\n        Numeral Prototype\n    ************************************/\n\n\n    numeral.fn = Numeral.prototype = {\n\n        clone : function () {\n            return numeral(this);\n        },\n\n        format : function (inputString, roundingFunction) {\n            return formatNumeral(this, \n                  inputString ? inputString : defaultFormat, \n                  (roundingFunction !== undefined) ? roundingFunction : Math.round\n              );\n        },\n\n        unformat : function (inputString) {\n            if (Object.prototype.toString.call(inputString) === '[object Number]') { \n                return inputString; \n            }\n            return unformatNumeral(this, inputString ? inputString : defaultFormat);\n        },\n\n        value : function () {\n            return this._value;\n        },\n\n        valueOf : function () {\n            return this._value;\n        },\n\n        set : function (value) {\n            this._value = Number(value);\n            return this;\n        },\n\n        add : function (value) {\n            var corrFactor = correctionFactor.call(null, this._value, value);\n            function cback(accum, curr, currI, O) {\n                return accum + corrFactor * curr;\n            }\n            this._value = [this._value, value].reduce(cback, 0) / corrFactor;\n            return this;\n        },\n\n        subtract : function (value) {\n            var corrFactor = correctionFactor.call(null, this._value, value);\n            function cback(accum, curr, currI, O) {\n                return accum - corrFactor * curr;\n            }\n            this._value = [value].reduce(cback, this._value * corrFactor) / corrFactor;            \n            return this;\n        },\n\n        multiply : function (value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = correctionFactor(accum, curr);\n                return (accum * corrFactor) * (curr * corrFactor) /\n                    (corrFactor * corrFactor);\n            }\n            this._value = [this._value, value].reduce(cback, 1);\n            return this;\n        },\n\n        divide : function (value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = correctionFactor(accum, curr);\n                return (accum * corrFactor) / (curr * corrFactor);\n            }\n            this._value = [this._value, value].reduce(cback);            \n            return this;\n        },\n\n        difference : function (value) {\n            return Math.abs(numeral(this._value).subtract(value).value());\n        }\n\n    };\n\n    /************************************\n        Exposing Numeral\n    ************************************/\n\n    // CommonJS module is defined\n    if (hasModule) {\n        module.exports = numeral;\n    }\n\n    /*global ender:false */\n    if (typeof ender === 'undefined') {\n        // here, `this` means `window` in the browser, or `global` on the server\n        // add `numeral` as a global object via a string identifier,\n        // for Closure Compiler 'advanced' mode\n        this['numeral'] = numeral;\n    }\n\n    /*global define:false */\n    if (typeof define === 'function' && define.amd) {\n        define([], function () {\n            return numeral;\n        });\n    }\n}).call(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/numeral/numeral.js\n ** module id = 6\n ** module chunks = 0\n **/","var currLang = 'en';\n\nfunction getHebABC(charNum){\n    var curChar = \"\";\n\n    switch(charNum){\n        case 1:\n            curChar = \"×\";\n            break;\n        case 2:\n            curChar = \"×‘\";\n            break;\n        case 3:\n            curChar = \"×’\";\n            break;\n        case 4:\n            curChar = \"×“\";\n            break;\n        case 5:\n            curChar = \"×”\";\n            break;\n        case 6:\n            curChar = \"×•\";\n            break;\n        case 7:\n            curChar = \"×–\";\n            break;\n        case 8:\n            curChar = \"×—\";\n            break;\n        case 9:\n            curChar = \"×˜\";\n            break;\n        case 10:\n            curChar = \"×™\";\n            break;\n        case 20:\n            curChar = \"×›\";\n            break;\n        case 30:\n            curChar = \"×œ\";\n            break;\n        case 40:\n            curChar = \"×ž\";\n            break;\n        case 50:\n            curChar = \"× \";\n            break;\n        case 60:\n            curChar = \"×¡\";\n            break;\n        case 70:\n            curChar = \"×¢\";\n            break;\n        case 80:\n            curChar = \"×¤\";\n            break;\n        case 90:\n            curChar = \"×¦\";\n            break;\n        case 100:\n            curChar = \"×§\";\n            break;\n        case 200:\n            curChar = \"×¨\";\n            break;\n        case 300:\n            curChar = \"×©\";\n            break;\n        case 400:\n            curChar = \"×ª\";\n            break;\n        case 500:\n            curChar = \"×ª×§\";\n            break;\n        case 600:\n            curChar = \"×ª×¨\";\n            break;\n        case 700:\n            curChar = \"×ª×©\";\n            break;\n        case 800:\n            curChar = \"×ª×ª\";\n            break;\n        case 900:\n            curChar = \"×ª×ª×§\";\n            break;\n        default:\n            curChar = \"\";\n    }\n    return(curChar);\n}\n\nfunction setLastChar(curChar){\n    var lastChar = \"\";\n\n    switch(curChar){\n        case \"×›\":\n            lastChar = \"×š\";\n            break;\n        case \"×ž\":\n            lastChar = \"×\";\n            break;\n        case \"× \":\n            lastChar = \"×Ÿ\";\n            break;\n        case \"×¤\":\n            lastChar = \"×£\";\n            break;\n        case \"×¦\":\n            lastChar = \"×¥\";\n            break;\n        default:\n            lastChar = curChar;\n    }\n    return(lastChar);\n}\n\nvar en_hHebYear = function (year){\n    return(year);\n};\n\nvar he_hHebYear = function (year){\n    var curChar, curNum, hebYr = \"\", curDiv = 100;\n\n    curNum = (year - (year % 1000)) / 1000;\n    year = year % 1000;\n    hebYr = hebYr + getHebABC(curNum);\n    curNum = 0;\n    while(year != 0){\n        hebYr = hebYr + getHebABC(curNum);\n        curNum = (year - (year % curDiv));\n        year = year % curDiv;\n        curDiv = curDiv / 10;\n    }\n    curChar = getHebABC(curNum);\n    hebYr = hebYr + '\"' + setLastChar(curChar);\n    return(hebYr);\n};\n\n\nvar en_holidays = function (cday, cmonth, cyear) {\n    // American civil holidays and some major religious holiday\n    if (cmonth == 1 && cday == 1)\n        return \"New Year's Day\";\n    else if (cmonth == 2 && cday == 12)\n        return \"Lincoln's Birthday\";\n    else if (cmonth == 2 && cday == 14)\n        return \"Valentine's Day\";\n    else if (cmonth == 2 && cday == NthDOW(3, 2, 2, cyear))\n        return \"President's Day\";\n    else if (cmonth == 3 && cday == 17)\n        return \"St. Patrick's Day\";\n    else if (cmonth == 3 || cmonth == 4) {\n        var e = Easter(cyear);\n        if (cmonth == e[1] && cday == e[2])\n            return \"Easter\";\n    }\n    else if (cmonth == 5 && cday == NthDOW(2, 1, 5, cyear))\n        return \"Mother's Day\";\n    else if (cmonth == 5 && cday == NthDOW(3, 7, 5, cyear))\n        return \"Armed Forces Day\";\n    else if (cmonth == 5 && cday == NthDOW(0, 2, 5, cyear))\n        return \"Memorial Day\";\n    else if (cmonth == 6 && cday == 14)\n        return \"Flag Day\";\n    else if (cmonth == 6 && cday == NthDOW(3, 1, 6, cyear))\n        return \"Father's Day\";\n    else if (cmonth == 7 && cday == 4)\n        return \"Independence Day\";\n    else if (cmonth == 9 && cday == NthDOW(1, 2, 9, cyear))\n        return \"Labor Day\";\n    else if (cmonth == 10 && cday == NthDOW(2, 2, 10, cyear))\n        return \"Columbus Day\";\n    else if (cmonth == 10 && cday == 31)\n        return \"Halloween\";\n    else if (cmonth == 11 && cday == 11)\n        return \"Veterans' Day\";\n    else if (cmonth == 11 && cday == NthDOW(4, 5, 11, cyear))\n        return \"Thanksgiving\";\n    else if (cmonth == 12 && cday == 25)\n        return \"Christmas\";\n\n    return \"\";\n};\n\nvar en_moadim = function (cday, cmonth, cyear, hday, hmonth, dow) {\n    var hd;\n\n    if(hmonth == 6) {\n        if(hday == 1 || hday == 2)\n            return \"Rosh Hashana\"\n        else if(hday == 3 && dow != 7)\n            return \"Fast of Gedalia\";\n        else if(hday == 4 && dow == 1)\n            return \"Fast of Gedalia\";\n        else if(hday == 10)\n            return \"Yom Kippur\"\n        else if(hday >= 15 && hday <= 22)\n            return \"Sukkot\"\n        else if(hday == 23)\n            return \"Sukkot (d)\"\n    }\n    else if(hmonth == 8) {\n        if(hday >= 25)\n            return \"Chanukkah\"\n    }\n    else if(hmonth == 9) {\n        if(hday <= 2) {\n            return \"Chanukkah\"\n        }\n        else if(hday == 3) {\n            // Kislev can be malei or chaser\n            if(cday == 1) {\n                cday = 29;\n                cmonth = 11;\n            }\n            else if(cday == 2) {\n                cday = 30;\n                cmonth = 11;\n            }\n            else\n                cday -= 3;\n            var hdate = civ2heb(cday, cmonth, cyear);\n            hd = eval(hdate.substring(0, hdate.indexOf(' ')));\n            if(hd == 29)\n                return \"Chanukkah\"\n        }\n        else if(hday == 10)\n            return \"Fast of Tevet\"\n    }\n    else if(hmonth == 10) {\n        if(hday==15)\n            return \"Tu b'Shvat\"\n    }\n    else if(hmonth == 11 || hmonth == 13) {\n        if(hday == 11 && dow == 5)\n            return \"Taanit Esther\"\n        else if(hday == 13 && dow != 7)\n            return \"Taanit Esther\"\n        else if(hday == 14)\n            return \"Purim\"\n        else if(hday == 15)\n            return \"Shushan Purim\"\n    }\n    else if(hmonth == 0) {\n\n        if(hday == 12 && dow == 5)\n            return \"Taanit Bechorot\"\n        else if(hday == 14 && dow != 7)\n            return \"Taanit Bechorot\"\n        else if(hday >= 15 && hday <= 21)\n            return \"Pesach\"\n        else if(hday == 22)\n            return \"Pesach (d)\"\n    }\n    else if(hmonth == 1) {\n        if(hday == 3 && dow == 5)\n            return \"Yom Ha'Atzmaut\"\n        else if(hday == 4 && dow == 5)\n            return \"Yom Ha'Atzmaut\"\n        else if(hday == 5 && dow != 6 && dow != 7)\n            return \"Yom Ha'Atzmaut\"\n        if(hday == 14)\n            return \"Pesah sheni\"\n        else if(hday == 18)\n            return \"Lag B'Omer\"\n        if(hday == 28)\n            return \"Yom Yerushalayim\"\n    }\n    else if(hmonth == 2) {\n        if(hday == 6)\n            return \"Shavuot\"\n        else if(hday == 7)\n            return \"Shavuot (d)\"\n    }\n    else if(hmonth == 3) {\n        if(hday == 17 && dow != 7)\n            return \"Fast of Tammuz\"\n        if(hday == 18 && dow == 1)\n            return \"Fast of Tammuz\"\n    }\n    else if(hmonth == 4) {\n        if(hday == 9 && dow != 7)\n            return \"Tisha B'Av\"\n        if(hday == 10 && dow == 1)\n            return \"Tisha B'Av\"\n        if(hday == 15)\n            return \"Tu B'Av\"\n    }\n\n    return \"\";\n};\n\n\nvar he_holidays = function (cday, cmonth, cyear) {\n    // American civil holidays and some major religious holiday\n    if (cmonth == 1 && cday == 1)\n        return \"×¨××© ×”×©× ×” ×”××–×¨×—×™×ª\";\n    else if (cmonth == 2 && cday == 12)\n        return \"×”×•×œ×“×ª ×œ×™× ×§×•×œ×Ÿ\";\n    else if (cmonth == 2 && cday == 14)\n        return \"×—×’ ×”××”×‘×”\";\n    else if (cmonth == 2 && cday == NthDOW(3, 2, 2, cyear))\n        return \"×™×•× ×”× ×©×™×\";\n    else if (cmonth == 3 && cday == 17)\n        return \"×™×•× ×¡×˜. ×¤×˜×¨×™×§\";\n    else if (cmonth == 3 || cmonth == 4) {\n        var e = Easter(cyear);\n        if (cmonth == e[1] && cday == e[2])\n            return \"×—×’ ×”×¤×¡×—×\";\n    }\n    else if (cmonth == 5 && cday == NthDOW(2, 1, 5, cyear))\n        return \"×™×•× ×”××\";\n    else if (cmonth == 5 && cday == NthDOW(3, 7, 5, cyear))\n        return \"Armed Forces Day\";\n    else if (cmonth == 5 && cday == NthDOW(0, 2, 5, cyear))\n        return \"×™×•× ×”×–×›×¨×•×Ÿ (××¨×”\\\"×‘)\";\n    else if (cmonth == 6 && cday == 14)\n        return \"×™×•× ×”×“×’×œ\";\n    else if (cmonth == 6 && cday == NthDOW(3, 1, 6, cyear))\n        return \"×™×•× ×”××‘ ×•×”×ž×©×¤×—×”\";\n    else if (cmonth == 7 && cday == 4)\n        return \"×™×•× ×”×¢×¦×ž××•×ª (××¨×”\\\"×‘)\";\n    else if (cmonth == 9 && cday == NthDOW(1, 2, 9, cyear))\n        return \"×—×’ ×”×¢×‘×•×“×”\";\n    else if (cmonth == 10 && cday == NthDOW(2, 2, 10, cyear))\n        return \"×™×•× ×§×•×œ×•×ž×‘×•×¡\";\n    else if (cmonth == 10 && cday == 31)\n        return \"×™×•× ×§×•×œ×•×ž×‘×•×¡\";\n    else if (cmonth == 11 && cday == 11)\n        return \"Veterans' Day\";\n    else if (cmonth == 11 && cday == NthDOW(4, 5, 11, cyear))\n        return \"×—×’ ×”×”×•×“×™×”\";\n    else if (cmonth == 12 && cday == 25)\n        return \"×—×’ ×”×ž×•×œ×“\";\n\n    return \"\";\n};\n\nvar he_moadim = function (cday, cmonth, cyear, hday, hmonth, dow) {\n    var hd;\n\n    if(hmonth == 6) {\n        if(hday == 1 || hday == 2)\n            return \"×¨××© ×”×©× ×”\";\n        else if(hday == 3 && dow != 7)\n            return \"×¦×•× ×’×“×œ×™×”\";\n        else if(hday == 4 && dow == 1)\n            return \"×¦×•× ×’×“×œ×™×”\";\n        else if(hday == 10)\n            return \"×™×•× ×›×™×¤×•×¨\";\n        else if(hday >= 15 && hday <= 22)\n            return \"×¡×•×›×•×ª\";\n        else if(hday == 23)\n            return \"×¡×•×›×•×ª (×’)\";\n    }\n    else if(hmonth == 8) {\n        if(hday >= 25)\n            return \"×—× ×•×›×”\";\n    }\n    else if(hmonth == 9) {\n        if(hday <= 2) {\n            return \"×—× ×•×›×”\";\n        }\n        else if(hday == 3) {\n            // Kislev can be malei or chaser\n            if(cday == 1) {\n                cday = 29;\n                cmonth = 11;\n            }\n            else if(cday == 2) {\n                cday = 30;\n                cmonth = 11;\n            }\n            else\n                cday -= 3;\n            var hdate = civ2heb(cday, cmonth, cyear);\n            hd = eval(hdate.substring(0, hdate.indexOf(' ')));\n            if(hd == 29)\n                return \"×—× ×•×›×”\";\n        }\n        else if(hday == 10)\n            return \"×¦×•× ×¢×©×¨×” ×‘×˜×‘×ª\";\n    }\n    else if(hmonth == 10) {\n        if(hday==15)\n            return \"×˜\\\"×• ×‘×©×‘×˜\";\n    }\n    else if(hmonth == 11 || hmonth == 13) {\n        if(hday == 11 && dow == 5)\n            return \"×ª×¢× ×™×ª ××¡×ª×¨\";\n        else if(hday == 13 && dow != 7)\n            return \"×ª×¢× ×™×ª ××¡×ª×¨\";\n        else if(hday == 14)\n            return \"×¤×•×¨×™×\";\n        else if(hday == 15)\n            return \"×©×•×©×Ÿ ×¤×•×¨×™×\";\n    }\n    else if(hmonth == 0) {\n        if(hday == 12 && dow == 5)\n            return \"×ª×¢× ×™×ª ×‘×›×•×¨×•×ª\";\n        else if(hday == 14 && dow != 7)\n            return \"×ª×¢× ×™×ª ×‘×›×•×¨×•×ª\";\n        else if(hday >= 15 && hday <= 21)\n            return \"×¤×¡×—\";\n        else if(hday == 22)\n            return \"×¤×¡×— (×’)\";\n    }\n    else if(hmonth == 1) {\n        if(hday == 3 && dow == 5)\n            return \"×™×•× ×”×¢×¦×ž××•×ª\";\n        else if(hday == 4 && dow == 5)\n            return \"×™×•× ×”×¢×¦×ž××•×ª\";\n        else if(hday == 5 && dow != 6 && dow != 7)\n            return \"×™×•× ×”×¢×¦×ž××•×ª\";\n        if(hday == 14)\n            return \"×¤×¡×— ×©× ×™\";\n        else if(hday == 18)\n            return \"×œ\\\"×’ ×‘×¢×•×ž×¨\";\n        if(hday == 28)\n            return \"×™×•× ×™×¨×•×©×œ×™×\";\n    }\n    else if(hmonth == 2) {\n        if(hday == 6)\n            return \"×©×‘×•×¢×•×ª\";\n        else if(hday == 7)\n            return \"×©×‘×•×¢×•×ª (×’)\";\n    }\n    else if(hmonth == 3) {\n        if(hday == 17 && dow != 7)\n            return \"×¦×•× ×™\\\"×– ×‘×ª×ž×•×–\";\n        if(hday == 18 && dow == 1)\n            return \"×¦×•× ×™\\\"×– ×‘×ª×ž×•×–\";\n    }\n    else if(hmonth == 4) {\n        if(hday == 9 && dow != 7)\n            return \"×ª×©×¢×” ×‘××‘\";\n        if(hday == 10 && dow == 1)\n            return \"×ª×©×¢×” ×‘××‘\";\n        if(hday == 15)\n            return \"×˜\\\"×• ×‘××‘\";\n    }\n    return \"\";\n};\n\nvar multiLang = {\n    en: {\n        hebMonth : ['Nisan', 'Iyyar', 'Sivan', 'Tammuz', 'Av', 'Elul',\n            'Tishrei', 'Cheshvan', 'Kislev', 'Tevet', 'Shevat',\n            'Adar', 'Adar I', 'Adar II'],\n        hHebDay: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10',\n            '11', '12', '13', '14', '15', '16', '17', '18', '19', '20',\n            '21', '22', '23', '24', '25', '26', '27', '28', '29', '30'],\n        civMonth: ['January', 'February', 'March', 'April', 'May', 'June',\n            'July', 'August', 'September', 'October', 'November', 'December'],\n        weekDay: ['Sun', 'Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Shabbat'],\n        hHebYear: en_hHebYear,\n        holidays: en_holidays,\n        moadim: en_moadim\n    },\n    he: {\n        hebMonth : ['Nisan', 'Iyyar', 'Sivan', 'Tammuz', 'Av', 'Elul',\n            'Tishrei', 'Cheshvan', 'Kislev', 'Tevet', 'Shevat',\n            'Adar', 'Adar I', 'Adar II'],\n        hHebDay: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10',\n            '11', '12', '13', '14', '15', '16', '17', '18', '19', '20',\n            '21', '22', '23', '24', '25', '26', '27', '28', '29', '30'],\n        civMonth: ['January', 'February', 'March', 'April', 'May', 'June',\n            'July', 'August', 'September', 'October', 'November', 'December'],\n        weekDay: ['Sun', 'Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Shabbat'],\n        hHebYear: he_hHebYear,\n        holidays: he_holidays,\n        moadim: he_moadim\n    }\n};\n\n\n\n\n\nfunction Gauss(year) {\n    var a,b,c,m, Mar;\t// Mar => \"day in March\" on which Pesach falls (return value)\n\n    a = Math.floor((12 * year + 17) % 19);\n    b = Math.floor(year % 4);\n    m = 32.044093161144 + 1.5542417966212 * a +  b / 4.0 - 0.0031777940220923 * year;\n    if (m < 0) {\n        m -= 1;\n    }\n    Mar = Math.floor(m);\n    if (m < 0) {\n        m++;\n    }\n    m -= Mar;\n    c = Math.floor((Mar + 3 * year + 5 * b + 5) % 7);\n    if (c == 0 && a > 11 && m >= 0.89772376543210 ) {\n        Mar++;\n    } else if (c == 1 && a > 6 && m >= 0.63287037037037) {\n        Mar += 2;\n    } else if (c == 2 || c == 4 || c == 6) {\n        Mar++;\n    }\n    Mar += Math.floor((year - 3760) / 100) - Math.floor((year - 3760) / 400) - 2;\n    return Mar;\n}\n\nfunction leap(y) {\n    return ((y % 400 == 0) || (y % 100 != 0 && y % 4 == 0));\n}\n\nfunction civMonthLength(month, year) {\n    if (month == 2) {\n        return 28 + (leap(year) ? 1 : 0 );\n    }\n    if (month == 4 || month == 6 || month == 9 || month == 11) {\n        return 30;\n    }\n    return 31;\n}\n\nfunction civ2heb(day, month, year) {\n    var d = day, m = month, y = year, hy, pesach, anchor, adarType;\n\n    m -= 2;\n    if (m <= 0) { // Jan or Feb\n        m += 12;\n        y -= 1;\n    }\n\n    d += Math.floor(7 * m / 12 + 30 * (m - 1)); // day in March\n    hy = y + 3760;\t// get Hebrew year\n    pesach = Gauss(hy);\n    if (d <= pesach - 15) { // before 1 Nisan\n        anchor = pesach;\n        d += 365;\n        if(leap(y)) {\n            d++;\n        }\n        y -= 1;\n        hy -= 1;\n        pesach = Gauss(hy);\n    } else {\n        anchor = Gauss(hy + 1);\n    }\n    d -= pesach - 15;\n    anchor -= pesach - 12;\n    y++;\n    if(leap(y)) {\n        anchor++;\n    }\n    for(m = 0; m < 11; m++) {\n        var days;\n        if(m == 7 && anchor % 30 == 2)\n            days = 30; // Cheshvan\n        else if(m == 8 && anchor % 30 == 0)\n            days = 29; // Kislev\n        else\n            days = 30 - m % 2;\n        if(d <= days)\n            break;\n        d -= days;\n    }\n\n    adarType = 0;\t\t\t// plain old Adar\n    if (m == 11 && anchor >= 30) {\n        if (d > 30) {\n            adarType = 2;\t// Adar 2\n            d -= 30;\n        } else {\n            adarType = 1;\t// Adar 1\n        }\n    }\n    if(m >= 6) {    // Tishrei or after?\n        hy++;\t\t// then bump up year\n    }\n    if(m == 11) {\t\t// Adar?\n        m += adarType;\t// adjust for Adars\n    }\n\n    return (d + ' ' + m + ' ' + hy);\n}\n\n\nfunction Easter(Y) {\n    // based on the algorithm of Oudin\n    var C = Math.floor(Y / 100), N = Y - 19 * Math.floor(Y / 19), K = Math.floor((C - 17) / 25),\n        I = C - Math.floor(C / 4) - Math.floor((C - K) / 3) + 19 * N + 15;\n    I = I - 30*Math.floor((I / 30));\n    I = I - Math.floor(I / 28) * (1 - Math.floor(I / 28) * Math.floor(29 / (I + 1)) * Math.floor((21 - N) / 11));\n    var J = Y + Math.floor(Y / 4) + I + 2 - C + Math.floor(C / 4);\n    J = J - 7 * Math.floor(J / 7);\n    var L = I - J, M = 3 + Math.floor((L + 40) / 44), D = L + 28 - 31 * Math.floor(M / 4), ret = new Object();\n\n    ret[1] = M;\n    ret[2] = D;\n\n    return ret;\n}\n\nfunction DOW(day,month,year) {\n    var a = Math.floor((14 - month)/12),\n        y = year - a, m = month + 12*a - 2,\n        d = (day + y + Math.floor(y/4) - Math.floor(y/100) + Math.floor(y/400) + Math.floor((31*m)/12)) % 7;\n\n    return d + 1;\n}\n\nfunction NthDOW(nth,weekday,month,year) {\n    if (nth > 0) {\n        return (nth - 1) * 7 + 1 + (7 + weekday - DOW((nth - 1) * 7 + 1, month, year)) % 7;\n    }\n    var days = civMonthLength(month, year);\n\n    return days - (DOW(days, month, year) - weekday + 7) % 7;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport function getHebDate(day, month, year) {\n    return civ2heb(day, month, year);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* KaluachJS - Kaluach Javascript Hebrew/civil calendar\n *   Version 1.00\n * Copyright (C) 5760,5761 (2000 CE), by Abu Mami and Yisrael Hersch.\n *   All Rights Reserved.\n *   All copyright notices in this script must be left intact.\n * Requires kdate.js - Kaluach Javascript Hebrew date routines\n * Acknowledgment given to scripts by:\n *\t - Tomer and Yehuda Shiran (docjs.com)\n *   - Gordon McComb\n *   - irt.org\n *   - javascripter.net\n * Terms of use:\n *   - Permission will be granted to use this script on personal\n *     web pages. All that's required is that you please ask.\n *     (Of course if you want to send a few dollars, that's OK too :-)\n *   - Use on commercial web sites requires a $50 payment.\n * website: http://www.kaluach.net\n * email: abumami@kaluach.net\n */\n\nvar jewishHolidays = 1;\nvar civilHolidays = 0;\n\nfunction doCal(month, year) {\n    var ret = calendar(month, year);\n\n    console.log(ret); // eslint-disable-line no-console\n\n    var result = BuildLuachHTML(ret);\n    document.getElementById(\"calBld\").innerHTML = result;\n}\n\n\n\nfunction calendar(selM, selY) {\n    var m = selM + 1;\n    var y = selY;\n    var d = civMonthLength(m, y);\n    var firstOfMonth = new Date (y, selM, 1);\n    var startPos = firstOfMonth.getDay() + 1;\n    var retVal = new Object();\n    retVal[1] = startPos;\n    retVal[2] = d;\n    retVal[3] = m;\n    retVal[4] = y;\n    return (retVal);\n}\n\nfunction BuildLuachHTML(parms)  {\n    var hebColor = \"darkblue\";\t\t// color of font representing Heb date\n    var civColor = \"darkred\";\t\t// color of font representing Civ date\n    var hebDate;\n    var hebDay;\n    var now = new Date();\n    var tday = now.getDate();\n    var tmonth = now.getMonth();\n    var tyear = now.getYear();\n    if(tyear < 1000)\n        tyear += 1900;\n    var cMonth = parms[3];\n    var cYear = parms[4];\n    var monthName = multiLang[currLang].civMonth[cMonth];\n    var lastDate = civMonthLength(cMonth, cYear);\n    var hm;\n    var hMonth;\n    var hYear;\n    var hmS;\n    var hmE;\n\n    // get starting Heb month in civil month\n    hebDate = civ2heb(1, cMonth, cYear);\n    hmS = hebDate.substring(hebDate.indexOf(' ')+1, hebDate.length);\n    hMonth = eval(hmS.substring(0, hmS.indexOf(' ')));\n    hYear = hmS.substring(hmS.indexOf(' ')+1, hmS.length);\n    var start = multiLang[currLang].hebMonth[hMonth+1] + ' ' + multiLang[currLang].hHebYear(hYear);\n\n    // get ending Heb month in civil month\n    hebDate = civ2heb(lastDate, cMonth, cYear);\n    hmE = hebDate.substring(hebDate.indexOf(' ')+1, hebDate.length);\n    hMonth = eval(hmE.substring(0, hmE.indexOf(' ')));\n    hYear = hmE.substring(hmE.indexOf(' ')+1, hmE.length);\n    var end = multiLang[currLang].hebMonth[hMonth+1] + ' ' + multiLang[currLang].hHebYear(hYear);\n\n    var hebSpan;\n    // check if start and end Heb months are the same\n    if(hmS == hmE)\n        hebSpan = start;\n    else\n        hebSpan = start + ' / ' + end\n\n    var result = '<center>';\n\n    var col;\n\n    // set up our table structure\n    result += '<table border=\"0\" cellpadding=\"0\" cellspacing=\"1\" style=\"border-collapse:separate;width:100%;\">';\t\t// table settings\n    result +=\t '<tr>';\t\t// create table header cell\n    result +=\t '<td colspan=\"7\" style=\"background-color:#edfaff;color:#010101;font-size:18px;height:30px;line-height:28px;text-align:center;\">';\t\t// create table header cell\n    result +=\t\t'<span class=\"calGdate\">';\t// set font for table header\n    result +=\t\t\tmonthName + ' ' + cYear;\n    result +=\t\t'</span>';\t\t// close table header's font settings\n    result +=\t\t'<span class=\"calJdate\">'; // set font for table header\n    result +=\t\t\t'&nbsp&nbsp ' + hebSpan;\n    result +=\t\t'</span>'; // close table header's font settings\n    result +=\t '</td>'; // close header cell\n    result +=\t '</tr>';\t\t// create table header cell\n\n    // variables to hold constant settings\n    var openCol = '<td style=\"height:58px;line-height:54px;text-align:center;\"><span style=\"font-weight:normal;font-size:18px;color:#000000;\">';\n    var closeCol = '</span></td>';\n\n    // create first row of table to set column width and specify week day\n    result += '<tr style=\"background-color:#ffffff;\">';\n    for (var dayNum = 1; dayNum < 8; ++dayNum) {\n        result += openCol + multiLang[currLang].weekDay[dayNum] + closeCol;\n    }\n    result += '</tr>';\n\n    // console.log(multiLang); // eslint-disable-line no-console\n\n    var cell = 1\n    var cDay = 1\n    var row;\n    for (row = 1; row <= 6; row++) {\n        result+='<tr valign=\"top\">'\n        for (col = 1; col <= 7; col++)  {\n\n            // convert civil date to hebrew\n            hebDate = civ2heb(cDay, cMonth, cYear);\n            hebDay = eval(hebDate.substring(0, hebDate.indexOf(' ')));\n\n            // console.log(cDay); // eslint-disable-line no-console\n            // console.log(cMonth); // eslint-disable-line no-console\n            // console.log(cYear); // eslint-disable-line no-console\n            // console.log(hebDate); // eslint-disable-line no-console\n\n            hm = hebDate.substring(hebDate.indexOf(' ')+1, hebDate.length);\n            hMonth = eval(hm.substring(0, hm.indexOf(' ')));\n\n            if (cell < parms[1])\n                result += '<td bgColor=\"#ededed\"></td>';\n            else {\n\n                var moed = \"\";\n                if(jewishHolidays)\n                    moed = multiLang[currLang].moadim(cDay, cMonth, cYear, hebDay, hMonth, col);\n                var holiday = \"\";\n                if(civilHolidays)\n                    holiday = multiLang[currLang].holidays(cDay, cMonth, cYear);\n\n                var bg;\n                if((cDay == tday) && (parms[3] == (tmonth+1)) && (parms[4] == tyear))\n                // highight the current day\n                    bg = 'bgColor=#9DEEAB';\n                else if (moed != \"\")\n                // highlight Heb holiday\n                    bg = 'bgColor=#5cd3fe';\n                else if (holiday != \"\") {\n                    // highlight civil holiday\n                    bg = 'bgColor=#F3AEE7';\n//\t\t\t\t\tmoed = holiday;\n                }\n                else\n                // no highlight\n                    bg = 'bgColor=#d9f4fd';\n\n                // assemble the contents of our day cell\n                result += '<TD ' + bg + ' style=\"height:60px;text-align:center;padding:10px 12px;\">';\n                result +=   '<table BORDER=0 COLS=2 style=\"height:16px;width:84px;\">';\n                result +=     '<tr>';\n                result +=       '<td>';\n                result +=         '<span style=\"font-family: Arial; color: ' + civColor + '>';\n                result +=           cDay;\n                result +=         '</span>';\n                result +=       '</td>';\n                result +=       '<td>';\n                result +=         '<span style=\"font-family: Arial; color: ' + hebColor + '>';\n                result +=           '<div align=right>' + multiLang[currLang].hHebDay[hebDay] + '</div>';\n                result +=         '</span>';\n                result +=       '</td>';\n                result +=     '</tr>';\n                result +=   '</table>';\n                result +=   '<FONT face=\"Arial\" size=-2>'\n                if (moed != \"\")\n                    result += moed;\n                if (moed != \"\" && holiday != \"\")\n                    result += '<br>';\n                if (holiday != \"\")\n                    result += holiday;\n                result +=   '</FONT>'\n                result += '</TD>';\n\n                cDay++\n            }\n\n            if (cDay <= lastDate)\n                cell++\n            else{\n                while((cell%7)!=0){\n                    result += '<td bgColor=\"#ededed\"></td>';\n                    cell++;\n                }\n                break;\n            }\n        }\n\n        result += '</TR>'\n        if(cDay > parms[2])\n            break;\n    }\n\n    result += '</table>'\n    result += '<div style=\"padding:10px 4px;\">Copyright &copy; 5760,5761 (2000 CE), Abu Mami and Yisrael Hersch. All rights reserved.<br>'\n    result += 'email: <a href=\"mailto:abumami@kaluach.net\"> abumami@kaluach.net</a> &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp web site: <a href=\"http://www.kaluach.net\">http://www.kaluach.net</a></div>'\n    result += '</center>'\n    return result;\n}\n\n\n\n\n\n\n\n\n\n\ndoCal(8, 2017);\n\n\n\n\n\n\n\n\n\n/*\n\n\n\nif (Drupal.jsEnabled) {\n    $(document).ready(\n        function(){\n            init_vars();\n            $('#zmanim-loc-show').click(function() {\n                set_and_show_all_times();\n            });\n            $('#daily-date-show').click(function() {\n                set_and_show_daily_times(false);\n            });\n            $('#shabbat-date-show').click(function() {\n                set_and_show_shabbat_times(false);\n            });\n        }\n    )\n}\n\nfunction get_times(ploc,pdate,s_type) {\n    if ((ploc != curr_loc) || (pdate != curr_date) || (s_type != curr_type)) {\n        curr_loc = ploc;\n        curr_date = pdate;\n        curr_type = s_type;\n        $.post(\"/general/ajax/get_times\", {loc: ploc, date: pdate},   function(data) {\n            if (((s_type == 1) || (s_type == 3)) && (pdate == $('#edit-daily-date-datepicker-popup-0').val())) {\n                if (data.dst) {\n                    $(\"#zmanim-daily-dst\").removeClass(\"zmanim-dst-off\").addClass(\"zmanim-dst-on\");\n                } else {\n                    $(\"#zmanim-daily-dst\").removeClass(\"zmanim-dst-on\").addClass(\"zmanim-dst-off\");\n                }\n                $(\"#zmanim-daily-alot\").html(data.alot);\n                $(\"#zmanim-daily-hanetz\").html(data.sunrise);\n                $(\"#zmanim-daily-shema\").html(data.shema);\n                $(\"#zmanim-daily-tefilla\").html(data.tefillah);\n                $(\"#zmanim-daily-chatzot\").html(data.chatzot);\n                $(\"#zmanim-daily-minchag\").html(data.minchag);\n                $(\"#zmanim-daily-minchak\").html(data.minchak);\n                $(\"#zmanim-daily-plag\").html(data.plag);\n                $(\"#zmanim-daily-sunset\").html(data.sunset);\n                $(\"#zmanim-daily-tzet\").html(data.tzet);\n            }\n            if (((s_type == 2) || (s_type == 3)) && (pdate == $('#edit-shabbat-date-datepicker-popup-0').val())) {\n                if (data.dst) {\n                    $(\"#zmanim-shabbat-dst\").removeClass(\"zmanim-dst-off\").addClass(\"zmanim-dst-on\");\n                } else {\n                    $(\"#zmanim-shabbat-dst\").removeClass(\"zmanim-dst-on\").addClass(\"zmanim-dst-off\");\n                }\n                if (data.omer) {\n                    if (data.chag) {\n                        z_omer = \", \"+data.omer;\n                    } else {\n                        z_omer = \"<br />\"+data.omer;\n                    }\n                } else {\n                    z_omer = \"\";\n                }\n                if (data.chag) {\n                    z_chag = \"<br />\"+data.chag;\n                } else {\n                    z_chag = \"\";\n                }\n                $(\"#zmanim-shabbat-date\").html(data.hebrew + \", \" + data.formated_gregorian);\n                $(\"#zmanim-shabbat-extra\").html(data.parasha + z_chag + z_omer);\n                $(\"#zmanim-shabbat-knissat\").html(data.knissat_shabbat);\n                $(\"#zmanim-shabbat-motzei\").html(data.motsei_shabbat);\n                $(\"#zmanim-shabbat-rabtam\").html(data.motsash_rab_tam);\n            }\n        }, \"json\");\n    }\n}\n\nfunction init_vars() {\n    curr_loc = \"\";\n    curr_date = \"\";\n    curr_type = \"\";\n    set_and_show_all_times();\n}\n\nfunction set_and_show_all_times() {\n    set_and_show_daily_times(true);\n    set_and_show_shabbat_times(true);\n}\n\nfunction set_and_show_daily_times(s_both) {\n    get_times($('#edit-city').val(),$('#edit-daily-date-datepicker-popup-0').val(),s_both?3:1);\n}\n\nfunction set_and_show_shabbat_times(s_both) {\n    get_times($('#edit-city').val(),$('#edit-shabbat-date-datepicker-popup-0').val(),s_both?3:2);\n}\n\n\n\n\n*/\n\n\n/** WEBPACK FOOTER **\n ** ./src/zmanim.js\n **/"],"sourceRoot":""}